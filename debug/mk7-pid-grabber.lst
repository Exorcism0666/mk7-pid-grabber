00000000 d _TLS_MODULE_BASE_
00000000 00000001 D CTRPluginFramework::PrivColor::_format
00000000 a shift
00000000 a shift
00000004 00000004 D CTRPluginFramework::PrivColor::ToFramebuffer
00000008 00000004 D CTRPluginFramework::PrivColor::FromFramebuffer
0000000c 00000001 b __tls_guard
00000010 00000010 B CTRPluginFramework::PrivColor::_clampArea
00000020 00000001 B CTRPluginFramework::PrivColor::_useClamp
00000024 00000008 B CTRPluginFramework::Renderer::_rendererContext
07000100 A __start__
07000100 T _start
07000104 T __service_ptr
07000108 t startup
07000128 t ClearMem
0700013c t ClrLoop
07000154 T _init
0700016c T initLib
0700018c T __ctru_exit
07000198 t .udivsi3_skip_div0_test
07000198 T __aeabi_uidiv
07000198 000001ec T __udivsi3
07000384 00000020 T __aeabi_uidivmod
070003a4 T __aeabi_idiv
070003a4 00000220 T __divsi3
070003ac t .divsi3_skip_div0_test
070005c4 00000020 T __aeabi_idivmod
070005e4 00000004 W __aeabi_idiv0
070005e4 00000004 W __aeabi_ldiv0
070005e8 0000019c T __aeabi_frsub
070005f0 00000194 T __aeabi_fsub
070005f0 00000194 T __subsf3
070005f4 00000190 T __addsf3
070005f4 00000190 T __aeabi_fadd
07000784 00000028 T __aeabi_ui2f
07000784 00000028 T __floatunsisf
0700078c 00000020 T __aeabi_i2f
0700078c 00000020 T __floatsisf
070007ac 0000008c T __aeabi_ul2f
070007ac 0000008c T __floatundisf
070007bc 0000007c T __aeabi_l2f
070007bc 0000007c T __floatdisf
07000838 T __aeabi_ldivmod
0700090c 00000014 T __restore_core_regs
0700090c 00000014 T restore_core_regs
07000920 T __gnu_Unwind_Restore_VFP
07000928 T __gnu_Unwind_Save_VFP
07000930 T __gnu_Unwind_Restore_VFP_D
07000938 T __gnu_Unwind_Save_VFP_D
07000940 T __gnu_Unwind_Restore_VFP_D_16_to_31
07000948 T __gnu_Unwind_Save_VFP_D_16_to_31
07000950 T __gnu_Unwind_Restore_WMMXD
07000994 T __gnu_Unwind_Save_WMMXD
070009d8 T __gnu_Unwind_Restore_WMMXC
070009ec T __gnu_Unwind_Save_WMMXC
07000a00 00000024 T ___Unwind_RaiseException
07000a00 00000024 T _Unwind_RaiseException
07000a24 00000024 T ___Unwind_Resume
07000a24 00000024 T _Unwind_Resume
07000a48 00000024 T ___Unwind_Resume_or_Rethrow
07000a48 00000024 T _Unwind_Resume_or_Rethrow
07000a6c 00000024 T ___Unwind_ForcedUnwind
07000a6c 00000024 T _Unwind_ForcedUnwind
07000a90 00000024 T ___Unwind_Backtrace
07000a90 00000024 T _Unwind_Backtrace
07000ac8 00000390 T strcmp
07000e50 T __aeabi_drsub
07000e58 000002b0 T __aeabi_dsub
07000e58 000002b0 T __subdf3
07000e5c 000002ac T __adddf3
07000e5c 000002ac T __aeabi_dadd
07001108 00000024 T __aeabi_ui2d
07001108 00000024 T __floatunsidf
0700112c 00000028 T __aeabi_i2d
0700112c 00000028 T __floatsidf
07001154 00000048 T __aeabi_f2d
07001154 00000048 T __extendsfdf2
0700119c 00000074 T __aeabi_ul2d
0700119c 00000074 T __floatundidf
070011b0 00000060 T __aeabi_l2d
070011b0 00000060 T __floatdidf
07001210 T __aeabi_uldivmod
0700124c t __do_global_dtors_aux
0700128c t frame_dummy
070012b8 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07001310 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const
07001324 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
0700134c 00000014 t __tcf_1
07001360 00000014 T CTRPluginFramework::PatchProcess(CTRPluginFramework::FwkSettings&)
07001374 00000074 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07001374 00000074 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
070013e8 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int)
07001410 00000068 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
07001478 00000118 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07001590 00000084 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
07001590 00000084 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
07001614 00000060 W CTRPluginFramework::Color::operator std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >() const
07001674 00000318 T CTRPluginFramework::main()
0700198c 000000d8 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
07001a64 00000138 W void std::vector<PlayerLog, std::allocator<PlayerLog> >::_M_realloc_insert<PlayerLog>(__gnu_cxx::__normal_iterator<PlayerLog*, std::vector<PlayerLog, std::allocator<PlayerLog> > >, PlayerLog&&)
07001b9c 000005a0 t CTRPluginFramework::main()::{lambda(CTRPluginFramework::MenuEntry*)#1}::operator()(CTRPluginFramework::MenuEntry*) const [clone .constprop.0]
0700213c 00000004 t CTRPluginFramework::main()::{lambda(CTRPluginFramework::MenuEntry*)#1}::_FUN(CTRPluginFramework::MenuEntry*)
07002140 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07002198 0000006c T CTRPluginFramework::utils::check_process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07002204 0000001c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const
07002220 00000138 T CTRPluginFramework::utils::parse_name[abi:cxx11](NetworkPlayerData*)
07002358 000000ac W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
07002404 00000074 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int) [clone .isra.0]
07002478 00000030 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
070024a8 00000218 T CTRPluginFramework::utils::format_friendcode[abi:cxx11](unsigned long long)
070026c0 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07002718 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
07002758 000000bc T CTRPluginFramework::Utils::GetSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07002814 00000054 W bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
07002868 00000038 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::seed(unsigned int)
070028a0 0000005c T CTRPluginFramework::InitializeRandomEngine()
070028fc 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0700297c 0000005c t CTRPluginFramework::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070029d8 00000044 T CTRPluginFramework::Utils::ToHex[abi:cxx11](unsigned long)
07002a1c 0000005c T CTRPluginFramework::Utils::Format[abi:cxx11](char const*, ...)
07002a78 00000080 T CTRPluginFramework::Utils::ToString[abi:cxx11](float, int)
07002af8 00000058 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
07002b50 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
07002bc8 00000034 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int)
07002bfc 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07002c0c 0000005c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07002c68 00000050 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*)
07002cb8 000000dc T CTRPluginFramework::Utils::ConvertUTF16ToUTF8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned short const*)
07002d94 0000029c t CTRPluginFramework::ListFolders(CTRPluginFramework::MenuFolderImpl&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07003030 00000104 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
07003134 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
07003168 0000013c T CTRPluginFramework::Utils::RemoveLastChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070032a4 00000050 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
070032a4 00000050 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
070032f4 00000024 W std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> >::_M_dispose()
07003318 00000080 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07003398 00000700 t CTRPluginFramework::SDExplorerInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07003a98 00000008 T CTRPluginFramework::Utils::FilePicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07003aa0 00000044 T CTRPluginFramework::Utils::DirectoryPicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07003ae4 000000c8 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::_M_gen_rand()
07003bac 00000054 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::operator()()
07003c00 00000080 T CTRPluginFramework::Utils::Random(unsigned long, unsigned long)
07003c80 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework5Utils6FormatB5cxx11EPKcz
07003c9c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07003cf4 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_move(char*, char const*, unsigned int)
07003d1c 0000001c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::pop_back()
07003d38 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
07003d98 0000005c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::substr(unsigned int, unsigned int) const
07003df4 00000024 T CTRPluginFramework::ResetColor[abi:cxx11]()
07003e18 00000068 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
07003e80 00000014 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
07003e94 00000014 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07003ea8 00000104 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07003fac 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07004004 00000078 t CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}::operator()(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&) const [clone .isra.0]
0700407c 00000044 W CTRPluginFramework::FSPath::operator FS_Path()
070040c0 00000048 T CTRPluginFramework::Directory::Close() const
07004108 00000008 T CTRPluginFramework::Directory::IsOpen() const
07004110 00000040 T CTRPluginFramework::Directory::Directory()
07004110 00000040 T CTRPluginFramework::Directory::Directory()
07004150 00000028 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
07004150 00000028 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
07004178 00000034 W std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::clear()
070041ac 0000007c T CTRPluginFramework::Directory::~Directory()
070041ac 0000007c T CTRPluginFramework::Directory::~Directory()
07004228 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
07004288 0000004c T CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(unsigned long, char const*)
07004288 0000004c T CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(unsigned long, char const*)
070042d4 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070042d4 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07004340 00000014 T CTRPluginFramework::Directory::GetFullName[abi:cxx11]() const
07004354 00000098 T CTRPluginFramework::Directory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070043ec 000000a4 T CTRPluginFramework::Directory::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07004490 000000d4 T CTRPluginFramework::Directory::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07004564 00000094 T CTRPluginFramework::Directory::IsExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070045f8 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
070046a4 0000000c t CTRPluginFramework::Directory::DirectoryEntry::operator=(CTRPluginFramework::Directory::DirectoryEntry&&) [clone .isra.0]
070046b0 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
07004740 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700477c 000000dc T CTRPluginFramework::Directory::ChangeWorkingDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07004858 0000014c T CTRPluginFramework::Directory::Open(CTRPluginFramework::Directory&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
070049a4 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
070049a4 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
070049fc 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
070049fc 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
07004a18 0000011c t void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07004b34 00000084 t void std::__pop_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>&)
07004bb8 00000068 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07004c20 000000b4 t void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07004cd4 00000044 W std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<CTRPluginFramework::Directory::DirectoryEntry> >, std::is_move_constructible<CTRPluginFramework::Directory::DirectoryEntry>, std::is_move_assignable<CTRPluginFramework::Directory::DirectoryEntry> >::value, void>::type std::swap<CTRPluginFramework::Directory::DirectoryEntry>(CTRPluginFramework::Directory::DirectoryEntry&, CTRPluginFramework::Directory::DirectoryEntry&)
07004d18 000001ec t void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07004f04 00000288 T CTRPluginFramework::Directory::_List() const
0700518c 000000d4 T CTRPluginFramework::Directory::ListFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07005260 000000dc T CTRPluginFramework::Directory::ListDirectories(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0700533c 0000000c T CTRPluginFramework::FwkSettings::Get()
07005348 000000cc T CTRPluginFramework::FwkSettings::SetThemeDefault()
07005414 00000010 T CTRPluginFramework::Process::GetHandle()
07005424 00000010 T CTRPluginFramework::Process::GetTitleID()
07005434 00000024 T CTRPluginFramework::Process::GetTextSize()
07005458 00000008 T CTRPluginFramework::Process::Pause()
07005460 00000010 T CTRPluginFramework::Process::Play(unsigned long)
07005470 000000a8 T CTRPluginFramework::Process::CopyMemory(void*, void const*, unsigned long)
07005518 00000004 T CTRPluginFramework::Process::CheckAddress(unsigned long, unsigned long)
0700551c 0000004c T CTRPluginFramework::Process::CheckRegion(unsigned long, unsigned long&, unsigned long)
07005568 00000020 T CTRPluginFramework::Process::Read32(unsigned long, unsigned long&)
07005588 00000020 T CTRPluginFramework::Process::Read16(unsigned long, unsigned short&)
070055a8 00000020 T CTRPluginFramework::Process::Read8(unsigned long, unsigned char&)
070055c8 00000024 T CTRPluginFramework::Process::ReturnToHomeMenu()
070055ec 000000b8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
070056a4 0000005c T CTRPluginFramework::Process::GetTitleID(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07005700 00000038 T CTRPluginFramework::Process::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07005738 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07005790 000000bc T CTRPluginFramework::File::Read(void*, unsigned long) const
0700584c 000000f4 T CTRPluginFramework::File::Write(void const*, unsigned long)
07005940 000000d8 T CTRPluginFramework::File::Seek(long long, CTRPluginFramework::File::SeekPos) const
07005a18 00000008 T CTRPluginFramework::File::Tell() const
07005a20 0000002c T CTRPluginFramework::File::Rewind() const
07005a4c 00000030 T CTRPluginFramework::File::Flush() const
07005a7c 00000064 T CTRPluginFramework::File::GetSize() const
07005ae0 00000008 T CTRPluginFramework::File::IsOpen() const
07005ae8 00000044 T CTRPluginFramework::File::File()
07005ae8 00000044 T CTRPluginFramework::File::File()
07005b2c 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int) const
07005ba4 00000014 T CTRPluginFramework::File::GetFullName[abi:cxx11]() const
07005bb8 00000094 T CTRPluginFramework::File::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07005c4c 000000d4 T CTRPluginFramework::File::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07005d20 00000084 T CTRPluginFramework::File::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07005da4 000000a0 T CTRPluginFramework::File::Exists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07005e44 000000a8 T CTRPluginFramework::File::Close() const
07005eec 0000017c T CTRPluginFramework::File::Open(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07006068 0000005c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
07006068 0000005c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
070060c4 0000009c T CTRPluginFramework::File::WriteLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07006160 00000040 T CTRPluginFramework::Sleep(CTRPluginFramework::Time)
070061a0 00000020 T CTRPluginFramework::Time::AsSeconds() const
070061c0 00000028 T CTRPluginFramework::Time::AsMicroseconds() const
070061e8 00000018 T CTRPluginFramework::Clock::Clock()
070061e8 00000018 T CTRPluginFramework::Clock::Clock()
07006200 0000002c T CTRPluginFramework::Clock::GetElapsedTime() const
0700622c 00000038 T CTRPluginFramework::Clock::HasTimePassed(CTRPluginFramework::Time) const
07006264 00000034 T CTRPluginFramework::Clock::Restart()
07006298 00000050 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long)
07006298 00000050 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long)
070062e8 00000014 T CTRPluginFramework::PluginMenu::Append(CTRPluginFramework::MenuEntry*) const
070062fc 00000004 T CTRPluginFramework::PluginMenu::operator+=(CTRPluginFramework::MenuEntry const*) const
07006300 00000048 T CTRPluginFramework::PluginMenu::Run() const
07006348 00000008 T CTRPluginFramework::PluginMenu::SetHexEditorState(bool) const
07006350 00000008 T CTRPluginFramework::PluginMenu::ShowWelcomeMessage(bool) const
07006358 00000008 T CTRPluginFramework::PluginMenu::IsOpen()
07006360 00000010 T CTRPluginFramework::PluginMenu::GetRunningInstance()
07006370 0000000c T CTRPluginFramework::PluginMenu::SynchronizeWithFrame(bool)
0700637c 00000050 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700637c 00000050 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070063cc 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
070063cc 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
070063fc 00000008 T CTRPluginFramework::MenuEntry::RefreshNote() const
07006404 00000038 W CTRPluginFramework::TextBox::~TextBox()
07006404 00000038 W CTRPluginFramework::TextBox::~TextBox()
0700643c 00000020 W CTRPluginFramework::TextBox::~TextBox()
0700645c 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0700645c 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070064a4 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070064a4 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070064e0 00000040 T CTRPluginFramework::MessageBox::~MessageBox()
070064e0 00000040 T CTRPluginFramework::MessageBox::~MessageBox()
07006520 00000008 T CTRPluginFramework::MessageBox::operator()() const
07006528 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07006580 000000c0 T CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07006640 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07006640 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07006688 0000006c T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07006688 0000006c T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
070066f4 00000030 T CTRPluginFramework::Keyboard::~Keyboard()
070066f4 00000030 T CTRPluginFramework::Keyboard::~Keyboard()
07006724 00000008 T CTRPluginFramework::Keyboard::IsHexadecimal(bool)
0700672c 0000001c T CTRPluginFramework::Keyboard::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool)
07006748 00000044 T CTRPluginFramework::Keyboard::Open() const
0700678c 00000098 T CTRPluginFramework::Keyboard::Open(float&) const
07006824 00000008 T CTRPluginFramework::Keyboard::GetInput[abi:cxx11]() const
0700682c 00000008 T CTRPluginFramework::Keyboard::GetMessage[abi:cxx11]() const
07006834 00000008 T CTRPluginFramework::Keyboard::CanAbort(bool) const
0700683c 00000008 T CTRPluginFramework::Keyboard::OnKeyboardEvent(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)) const
07006844 000000d0 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::assign(char const*) [clone .isra.0]
07006914 00000094 T CTRPluginFramework::stou32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&)
070069a8 00000090 T CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07006a38 000000c4 T CTRPluginFramework::Keyboard::Open(unsigned char&) const
07006afc 00000090 T CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07006b8c 000000c4 T CTRPluginFramework::Keyboard::Open(unsigned short&) const
07006c50 00000090 T CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07006ce0 000000c4 T CTRPluginFramework::Keyboard::Open(unsigned long&) const
07006da4 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07006e50 000000d0 T CTRPluginFramework::Keyboard::Open(float&, float) const
07006f20 00000104 T CTRPluginFramework::Keyboard::Open(unsigned long&, unsigned long) const
07007024 00000104 T CTRPluginFramework::Keyboard::Open(unsigned short&, unsigned short) const
07007128 00000104 T CTRPluginFramework::Keyboard::Open(unsigned char&, unsigned char) const
0700722c 00000074 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
070072a0 00000088 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07007328 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07007380 00000008 T CTRPluginFramework::Hotkey::operator=(unsigned long)
07007388 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
07007388 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
070073a4 00000048 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
070073a4 00000048 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
070073ec 00000030 T CTRPluginFramework::HotkeyManager::operator[](unsigned long)
0700741c 0000001c T CTRPluginFramework::HotkeyManager::Count()
07007438 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
070074b8 00000088 T CTRPluginFramework::Hotkey::AskForKeys()
07007540 00000138 T CTRPluginFramework::HotkeyManager::AskForKeys()
07007678 0000007c T CTRPluginFramework::KeysToString[abi:cxx11](unsigned long)
070076f4 00000108 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
070077fc 000000fc T CTRPluginFramework::Hotkey::ToString[abi:cxx11](bool) const
070078f8 000000c8 T CTRPluginFramework::HotkeyManager::ToString[abi:cxx11]()
070079c0 00000148 t _GLOBAL__sub_I__ZN18CTRPluginFramework6HotkeyC2Ev
07007b08 00000034 t _GLOBAL__sub_D__ZN18CTRPluginFramework6HotkeyC2Ev
07007b3c 00000070 t std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned int, int const&, unsigned int) const [clone .isra.0]
07007bac 0000005c t std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(int const&) [clone .isra.0]
07007c08 000000c4 T CTRPluginFramework::Render::PullRandomCharacter[abi:cxx11](int)
07007ccc 0000001c W std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets()
07007ce8 00000038 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Render11_randomSetsB5cxx11E
07007d20 00000064 t _GLOBAL__sub_D__ZN18CTRPluginFramework6Render11_randomSetsB5cxx11E
07007d84 00000110 T CTRPluginFramework::Color::Fade(float)
07007e94 00000040 T CTRPluginFramework::Color::operator<=(CTRPluginFramework::Color const&) const
07007ed4 0000007c T CTRPluginFramework::Color::operator*(CTRPluginFramework::Color const&) const
07007f50 00000220 T CTRPluginFramework::Color::Blend(CTRPluginFramework::Color const&, CTRPluginFramework::Color::BlendMode) const
07008170 000000c8 T OnSharedMemMap(unsigned long, void*, MemPerm, MemPerm)
07008238 00000008 t CTRPluginFramework::KeepThreadMain(void*)::{lambda(void const*)#1}::_FUN(void const*)
07008240 00000064 t void std::vector<unsigned long, std::allocator<unsigned long> >::_M_range_initialize<unsigned long const*>(unsigned long const*, unsigned long const*, std::forward_iterator_tag) [clone .isra.0]
070082a4 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
070082fc 00000018 W CTRPluginFramework::ProcessImpl::UserProcessEventCallback(CTRPluginFramework::Process::Event)
07008314 00000028 T OnLoadCro
0700833c 000000ac T CTRPluginFramework::ThreadExit()
070083e8 00000054 T abort
0700843c 000000c8 T __entrypoint
07008504 00000028 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
07008504 00000028 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
0700852c 000000e4 W unsigned long CTRPluginFramework::Utils::Search<unsigned long>(unsigned long, unsigned long, std::vector<unsigned long, std::allocator<unsigned long> > const&)
07008610 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07008690 00000074 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int) [clone .isra.0]
07008704 00000030 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
07008738 000006f0 T CTRPluginFramework::KeepThreadMain(void*)
07008e28 000000b0 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
07008ed8 0000020c T CTRPluginFramework::Initialize()
070090e4 00000044 T CTRPluginFramework::ThreadInit(void*)
07009128 00000048 t _GLOBAL__sub_I_g_gspEventThreadPriority
07009170 0000002c t _GLOBAL__sub_D_g_gspEventThreadPriority
070091a0 000000b8 t NCSNDCmd_Add
07009258 00000084 t NCSNDCmd_Execute.constprop.0
070092dc 00000068 T ncsndNotifyAptEvent
07009344 00000004 t ncsndAptHook
07009348 000001c8 T ncsndInit
07009510 000000ac T ncsndExit
070095bc 00000024 T ncsndInitializeSound
070095e0 00000264 T ncsndPlaySound
07009844 00000040 T ncsndStopSound
07009884 00000090 T ncsndIsPlaying
07009914 T LoadCROHooked
07009928 T AR__ExecuteRoutine
07009950 t stackBak
07009958 T svcCustomBackdoor
07009960 T svcConvertVAToPA
07009968 T svcFlushDataCacheRange
07009970 T svcInvalidateEntireInstructionCache
07009978 T svcMapProcessMemoryEx
0700998c T svcUnmapProcessMemoryEx
07009994 T svcControlProcess
0700999c 00000020 T __libctru_exit
070099bc 0000001c T __appExit
070099d8 0000003c T __syscall_getreent
07009a14 0000000c T __aeabi_read_tp
07009a20 0000003c T __getThreadLocalStorage
07009a5c 00000070 T __syscall_gettod_r
07009acc 00000004 T __syscall_lock_acquire
07009ad0 00000004 T __syscall_lock_release
07009ad4 00000004 T __syscall_lock_acquire_recursive
07009ad8 00000004 T __syscall_lock_release_recursive
07009adc 00000054 T initThreadVars
07009b30 0000005c T __system_initSyscalls
07009b8c 00000190 T __createThread
07009d1c 00000110 T __startThread
07009e2c 00000024 T threadGetHandle
07009e50 0000002c T threadFree
07009e7c 00000024 T threadJoin
07009ea0 00000020 T threadGetCurrent
07009ec0 0000003c T threadExit
07009efc 00000020 t _thread_begin
07009f1c 0000004c T hidInitFake
07009f68 0000003c T hidExitFake
07009fa4 0000002c T hidSetSharedMem
07009fd0 00000070 T plgLdrExit
0700a040 000000d4 T plgLdrInit
0700a114 00000050 T PLGLDR__GetPluginPath
0700a164 00000024 T PLGLDR__FetchEvent
0700a188 000000e8 T PLGLDR__Reply
0700a270 000000b0 T __system_allocateHeaps
0700a320 0000002c t CTRPluginFrameworkImpl::Services::GSP::GSPGPU__RegisterInterruptHook()
0700a34c 00000028 t CTRPluginFrameworkImpl::Services::GSP::ClearInterrupts()
0700a374 00000154 t CTRPluginFrameworkImpl::Services::GSP::InterruptReceiver(void*)
0700a4c8 00000080 t CTRPluginFrameworkImpl::Services::GSP::EnqueueEvent(signed char, bool)
0700a548 00000028 t CTRPluginFrameworkImpl::Services::GSP::plgVAtoGameVa(unsigned long*)
0700a570 00000028 t unsigned char* std::copy<unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*) [clone .isra.0]
0700a598 00000064 t void std::vector<unsigned long, std::allocator<unsigned long> >::_M_range_initialize<unsigned long const*>(unsigned long const*, unsigned long const*, std::forward_iterator_tag) [clone .isra.0]
0700a5fc 000000d0 T CTRPluginFrameworkImpl::Services::GSP::Update(unsigned long, unsigned long, unsigned long)
0700a6cc 00000004 T __gsp__Update
0700a6d0 00000288 T CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo::FillFrameBufferFrom(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo&)
0700a958 00000018 T CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared::FillFrameBuffersFrom(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&)
0700a970 00000020 T CTRPluginFrameworkImpl::Services::GSP::TriggerPSCEvents()
0700a990 00000048 T CTRPluginFrameworkImpl::Services::GSP::PauseInterruptReceiver()
0700a9d8 00000034 T CTRPluginFrameworkImpl::Services::GSP::ResumeInterruptReceiver()
0700aa0c 00000024 T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlank()
0700aa30 00000024 T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlank1()
0700aa54 0000003c T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlankBoth()
0700aa90 0000002c T CTRPluginFrameworkImpl::Services::GSP::SwapBuffer(int)
0700aabc 00000090 T CTRPluginFrameworkImpl::Services::GSP::WaitBufferSwapped(int)
0700ab4c 00000034 T CTRPluginFrameworkImpl::Services::GSP::ImportFrameBufferInfo(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&, int)
0700ab80 000000a8 T CTRPluginFrameworkImpl::Services::GSP::SetFrameBufferInfo(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&, int, bool)
0700ac28 0000017c T CTRPluginFrameworkImpl::Services::GSP::Initialize()
0700ada4 0000003c t _GLOBAL__sub_I__ZN22CTRPluginFrameworkImpl8Services3GSP11BufferFlagsE
0700ade0 00000020 t _GLOBAL__sub_D__ZN22CTRPluginFrameworkImpl8Services3GSP11BufferFlagsE
0700ae00 0000023c t CTRPluginFramework::ScreenToBMP(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned long, CTRPluginFramework::Screenshot::ImageBuffer*)
0700b03c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0700b094 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0700b124 00000280 T CTRPluginFramework::Screenshot::UpdateFileCount()
0700b3a4 00000048 T CTRPluginFramework::Screenshot::Initialize()
0700b3ec 00000374 T CTRPluginFramework::Screenshot::OSDCallback(unsigned long, void*, void*, int, int)
0700b760 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
0700b7f0 00000300 T CTRPluginFramework::Screenshot::TaskCallback(void*)
0700baf0 0000003c t _GLOBAL__sub_I__ZN18CTRPluginFramework10Screenshot9IsEnabledE
0700bb2c 000000d4 t _GLOBAL__sub_D__ZN18CTRPluginFramework10Screenshot9IsEnabledE
0700bc00 000000ac T CTRPluginFramework::SystemImpl::Initialize()
0700bcac 00000050 T CTRPluginFramework::SystemImpl::CheckCitra()
0700bcfc 00000018 T CTRPluginFramework::SystemImpl::WantsToSleep()
0700bd14 0000001c T CTRPluginFramework::SystemImpl::IsSleeping()
0700bd30 0000003c T CTRPluginFramework::SystemImpl::ReadyToSleep()
0700bd6c 00000020 T CTRPluginFramework::SystemImpl::WakeUpFromSleep()
0700bd8c 00000044 T CTRPluginFramework::SystemImpl::Status()
0700bdd0 00000020 t SetHookContextInTLS(CTRPluginFramework::HookContext*)
0700bdf0 00000014 t decltype (::new ((void*)(0)) CTRPluginFramework::AsmWrapper()) std::construct_at<CTRPluginFramework::AsmWrapper>(CTRPluginFramework::AsmWrapper*) [clone .isra.0]
0700be04 00000240 t GenerateAsm(CTRPluginFramework::AsmWrapper&, CTRPluginFramework::HookContext&)
0700c044 00000044 W CTRPluginFramework::Lock::~Lock()
0700c044 00000044 W CTRPluginFramework::Lock::~Lock()
0700c088 000000d4 T CTRPluginFramework::HookManager::HookManager()
0700c088 000000d4 T CTRPluginFramework::HookManager::HookManager()
0700c15c 00000074 T CTRPluginFramework::HookManager::GetFreeHookWrapper(long&)
0700c1d0 00000064 T CTRPluginFramework::HookManager::GetAsmWrapper(CTRPluginFramework::HookContext*)
0700c234 000000d0 T CTRPluginFramework::HookManager::DisableHook(CTRPluginFramework::HookContext&)
0700c304 0000000c T CTRPluginFramework::HookManager::Lock()
0700c310 0000000c T CTRPluginFramework::HookManager::Unlock()
0700c31c 00000068 T CTRPluginFramework::HookManager::PrepareToUnmapMemory()
0700c384 00000078 T CTRPluginFramework::HookManager::RecoverFromUnmapMemory()
0700c400 000000c8 T __hook__CheckTlsValue
0700c4c8 00000144 W void std::vector<CTRPluginFramework::AsmWrapper, std::allocator<CTRPluginFramework::AsmWrapper> >::_M_realloc_insert<>(__gnu_cxx::__normal_iterator<CTRPluginFramework::AsmWrapper*, std::vector<CTRPluginFramework::AsmWrapper, std::allocator<CTRPluginFramework::AsmWrapper> > >)
0700c60c 00000084 T CTRPluginFramework::HookManager::GetFreeAsmWrapper()
0700c690 0000015c T CTRPluginFramework::HookManager::ApplyHook(CTRPluginFramework::HookContext&)
0700c7ec 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework11HookManager10_singletonE
0700c7f8 00000044 t _GLOBAL__sub_D__ZN18CTRPluginFramework11HookManager10_singletonE
0700c83c 00000010 t std::__atomic_base<unsigned long>::operator=(unsigned long) [clone .isra.0]
0700c84c 000000ac W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release()
0700c8f8 00000060 T CTRPluginFramework::Scheduler::Core::Core()
0700c8f8 00000060 T CTRPluginFramework::Scheduler::Core::Core()
0700c958 00000098 T CTRPluginFramework::Scheduler::Initialize()
0700c9f0 0000004c T CTRPluginFramework::Scheduler::Exit()
0700ca3c 00000020 W std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count()
0700ca3c 00000020 W std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count()
0700ca5c 00000040 t std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)2>&&) [clone .isra.0]
0700ca9c 00000044 W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_add_ref_copy()
0700cae0 00000040 t std::__shared_count<(__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&) [clone .isra.0]
0700cb20 000001a4 T CTRPluginFramework::Scheduler::_PollTask(CTRPluginFramework::Scheduler::Core&)
0700ccc4 00000104 T CTRPluginFramework::Scheduler__CoreHandler(void*)
0700cdc8 00000058 T CTRPluginFramework::Scheduler::Core::Assign(CTRPluginFramework::Task const&)
0700ce20 00000140 W void std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > >::_M_realloc_insert<std::shared_ptr<CTRPluginFramework::TaskContext> const&>(__gnu_cxx::__normal_iterator<std::shared_ptr<CTRPluginFramework::TaskContext>*, std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > > >, std::shared_ptr<CTRPluginFramework::TaskContext> const&)
0700cf60 00000174 T CTRPluginFramework::Scheduler::Schedule(CTRPluginFramework::Task const&)
0700d0d4 00000044 t _GLOBAL__sub_I__ZN18CTRPluginFramework9Scheduler10_singletonE
0700d118 00000088 t _GLOBAL__sub_D__ZN18CTRPluginFramework9Scheduler10_singletonE
0700d1a0 00000024 T CTRPluginFramework::GetBPP(GSPGPU_FramebufferFormat)
0700d1c4 00000070 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
0700d1c4 00000070 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
0700d234 00000100 T CTRPluginFramework::ScreenImpl::Initialize()
0700d334 00000050 T CTRPluginFramework::ScreenImpl::ApplyCtrpfScreens()
0700d384 000000e0 T CTRPluginFramework::ScreenImpl::Fade(float)
0700d464 0000005c T CTRPluginFramework::ScreenImpl::ImportFromGsp()
0700d4c0 00000028 T CTRPluginFramework::ScreenImpl::Release()
0700d4e8 00000070 T CTRPluginFramework::ScreenImpl::Acquire(unsigned long, unsigned long, unsigned long, unsigned long, bool)
0700d558 00000040 T CTRPluginFramework::ScreenImpl::Flush()
0700d598 00000098 T CTRPluginFramework::ScreenImpl::Clear(bool)
0700d630 00000044 T CTRPluginFramework::ScreenImpl::Copy()
0700d674 000000cc T CTRPluginFramework::ScreenImpl::Acquire(bool)
0700d740 00000008 T CTRPluginFramework::ScreenImpl::IsTopScreen()
0700d748 0000005c T CTRPluginFramework::ScreenImpl::Is3DEnabled()
0700d7a8 00000050 T CTRPluginFramework::ScreenImpl::Flash(CTRPluginFramework::Color&)
0700d7f8 0000003c T CTRPluginFramework::ScreenImpl::Clean()
0700d834 0000008c T CTRPluginFramework::ScreenImpl::SwitchFrameBuffers(bool)
0700d8c0 00000070 T CTRPluginFramework::ScreenImpl::AcquireFromGsp(bool)
0700d930 00000030 T CTRPluginFramework::ScreenImpl::CheckGspFrameBuffersInfo()
0700d960 00000060 T CTRPluginFramework::ScreenImpl::SwapBuffer()
0700d9c0 00000014 T CTRPluginFramework::ScreenImpl::SwapBufferInternal()
0700d9d4 0000001c T CTRPluginFramework::ScreenImpl::GetBacklight()
0700d9f0 0000001c T CTRPluginFramework::ScreenImpl::SetBacklight(unsigned long)
0700da0c 00000008 T CTRPluginFramework::ScreenImpl::GetFormat() const
0700da14 00000008 T CTRPluginFramework::ScreenImpl::GetStride() const
0700da1c 00000008 T CTRPluginFramework::ScreenImpl::GetBytesPerPixel() const
0700da24 0000001c T CTRPluginFramework::ScreenImpl::GetFrameBufferInfos(int&, int&, GSPGPU_FramebufferFormat&) const
0700da40 0000001c T CTRPluginFramework::ScreenImpl::GetLeftFrameBuffer(bool)
0700da5c 00000054 T CTRPluginFramework::ScreenImpl::GetLeftFrameBuffer(int, int)
0700dab0 0000002c T CTRPluginFramework::ScreenImpl::GetRightFrameBuffer(bool)
0700dadc 00000058 T CTRPluginFramework::ScreenImpl::GetRightFrameBuffer(int, int)
0700db34 0000005c T CTRPluginFramework::ScreenImpl::GetPosFromAddress(unsigned long, int&, int&)
0700db90 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0700dbb4 00000004 t addrMapNodeDestructor(rbtree_node*)
0700dbb8 00000144 T CTRPluginFramework::Heap::MemAlign(unsigned int, unsigned int)
0700dcfc 00000008 T CTRPluginFramework::Heap::Alloc(unsigned int)
0700dd04 0000006c T CTRPluginFramework::Heap::Free(void*)
0700dd70 0000000c T CTRPluginFramework::Heap::SpaceFree()
0700dd7c 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
0700dd88 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
0700dda8 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0700de00 000002b4 T CTRPluginFramework::FSPath::SdmcFixPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700e0b4 0000003c W unsigned short* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<unsigned short, unsigned short>(unsigned short*, unsigned short*, unsigned short*)
0700e0f0 000001d4 W std::vector<unsigned short, std::allocator<unsigned short> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned int, unsigned short const&)
0700e2c4 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0700e2c4 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0700e388 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework6FSPath7FSMutexE
0700e394 00000034 t _GLOBAL__sub_D__ZN18CTRPluginFramework6FSPath7FSMutexE
0700e3c8 0000000c t KProcess::GetCurrent()::{lambda()#1}::_FUN()
0700e3d4 00000018 t KProcess::PatchCategory(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
0700e3ec 00000040 t KProcess::PatchMaxPriority(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
0700e42c 00000044 t KProcess::PatchMaxThreads()::{lambda(KProcess*, unsigned long)#1}::_FUN(KProcess*, unsigned long)
0700e470 00000010 t KProcess::PatchCore2Access()::{lambda(KProcess*)#1}::_FUN(KProcess*)
0700e480 00000014 t Kernel::Memcpy(void*, void const*, unsigned long)::{lambda(void*, void*, unsigned long)#1}::_FUN(void*, void*, unsigned long)
0700e494 00000004 T Kernel::Initialize()
0700e498 00000018 T Kernel::Memcpy(void*, void const*, unsigned long)
0700e4b0 0000000c T KProcess::GetCurrent()
0700e4bc 00000024 T KProcess::PatchCore2Access()
0700e4e0 0000002c T KProcess::PatchCategory(unsigned long)
0700e50c 00000014 T KProcess__PatchCategory
0700e520 0000002c T KProcess::PatchMaxPriority(unsigned long)
0700e54c 00000014 T KProcess__PatchMaxPriority
0700e560 00000028 T KProcess::PatchMaxThreads()
0700e588 0000004c t CTRPluginFramework::ThreadPredicate(KThread*)
0700e5d4 00000094 T CTRPluginFramework::ProcessImpl::Play(bool)
0700e668 0000003c T CTRPluginFramework::ProcessImpl::LockGameThreads()
0700e6a4 00000038 T CTRPluginFramework::ProcessImpl::UnlockGameThreads()
0700e6dc 00000064 T CTRPluginFramework::ProcessImpl::IsValidAddress(unsigned long)
0700e740 00000070 T CTRPluginFramework::ProcessImpl::GetMemRegion(unsigned long)
0700e7b0 00000094 T CTRPluginFramework::ProcessImpl::GetNextRegion(MemInfo const&)
0700e844 000000a8 T CTRPluginFramework::ProcessImpl::GetPreviousRegion(MemInfo const&)
0700e8ec 00000038 T CTRPluginFramework::ProcessImpl::EnableExceptionHandlers()
0700e924 0000001c T CTRPluginFramework::ProcessImpl::DisableExceptionHandlers()
0700e940 00000038 T CTRPluginFramework::ProcessImpl::ReturnFromException(CpuRegisters*)
0700e958 t _store_reg_loop
0700e978 0000000c T CTRPluginFramework::ProcessImpl::SignalExit()
0700e984 00000028 W std::_Vector_base<MemInfo, std::allocator<MemInfo> >::~_Vector_base()
0700e984 00000028 W std::_Vector_base<MemInfo, std::allocator<MemInfo> >::~_Vector_base()
0700e9ac 000000ec W void std::vector<MemInfo, std::allocator<MemInfo> >::_M_realloc_insert<MemInfo const&>(__gnu_cxx::__normal_iterator<MemInfo*, std::vector<MemInfo, std::allocator<MemInfo> > >, MemInfo const&)
0700ea98 0000003c W std::vector<MemInfo, std::allocator<MemInfo> >::push_back(MemInfo const&)
0700ead4 000000bc T CTRPluginFramework::ProcessImpl::UpdateMemRegions(bool)
0700eb90 00000424 T CTRPluginFramework::ProcessImpl::Initialize()
0700efb4 0000006c T CTRPluginFramework::ProcessImpl::Pause(bool)
0700f020 000000e0 T CTRPluginFramework::ProcessImpl::ExceptionHandler(ERRF_ExceptionInfo*, CpuRegisters*)
0700f100 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
0700f10c 00000034 t _GLOBAL__sub_D__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
0700f140 000000a0 T CTRPluginFramework::EventManager::EventManager(unsigned long)
0700f140 000000a0 T CTRPluginFramework::EventManager::EventManager(unsigned long)
0700f1e0 00000050 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::pop_front()
0700f230 00000038 T CTRPluginFramework::EventManager::Clear()
0700f268 000001e8 W void std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_push_back_aux<CTRPluginFramework::Event const&>(CTRPluginFramework::Event const&)
0700f450 00000068 T CTRPluginFramework::EventManager::PushEvent(CTRPluginFramework::Event const&)
0700f4b8 000002f0 T CTRPluginFramework::EventManager::ProcessEvents()
0700f7a8 000000cc T CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)
0700f874 00000008 T CTRPluginFramework::EventManager::PollEvent(CTRPluginFramework::Event&)
0700f87c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0700f8d4 00000008 T CTRPluginFramework::SoundEngineImpl::Initializelibcwav()
0700f8dc 00000004 T CTRPluginFramework::SoundEngineImpl::NotifyAptEvent(APT_HookType)
0700f8e0 00000004 T CTRPluginFramework::SoundEngineImpl::SetVaToPaConvFunction(unsigned long (*)(void const*))
0700f8e4 00000048 T CTRPluginFramework::SoundEngineImpl::RegisterMenuSoundEvent(CTRPluginFramework::SoundEngine::Event, CTRPluginFramework::Sound&)
0700f92c 00000024 T CTRPluginFramework::SoundEngineImpl::PlayMenuSound(CTRPluginFramework::SoundEngine::Event)
0700f950 00000044 T CTRPluginFramework::SoundEngineImpl::ClearMenuSounds()
0700f994 00000128 W std::vector<CTRPluginFramework::Sound, std::allocator<CTRPluginFramework::Sound> >::_M_default_append(unsigned int)
0700fabc 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
0700fb4c 00000200 T CTRPluginFramework::SoundEngineImpl::InitializeMenuSounds()
0700fd4c 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework15SoundEngineImpl10menuSoundsE
0700fd58 00000050 t _GLOBAL__sub_D__ZN18CTRPluginFramework15SoundEngineImpl10menuSoundsE
0700fda8 0000002c t std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_M_allocate(unsigned int) [clone .isra.0]
0700fdd4 00000028 W CTRPluginFramework::Mutex::~Mutex()
0700fdd4 00000028 W CTRPluginFramework::Mutex::~Mutex()
0700fdfc 00000024 W CTRPluginFramework::File::~File()
0700fdfc 00000024 W CTRPluginFramework::File::~File()
0700fe20 00000108 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long)
0700fe20 00000108 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long)
0700ff28 00000008 T CTRPluginFramework::PluginMenuImpl::Append(CTRPluginFramework::MenuItem*) const
0700ff30 00000020 T CTRPluginFramework::PluginMenuImpl::Close(CTRPluginFramework::MenuFolderImpl*)
0700ff50 00000190 T CTRPluginFramework::PluginMenuImpl::LoadHotkeysFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
070100e0 00000020 T CTRPluginFramework::PluginMenuImpl::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
07010100 0000001c T CTRPluginFramework::PluginMenuImpl::ForceExit()
0701011c 0000001c T CTRPluginFramework::PluginMenuImpl::ForceOpen()
07010138 00000020 T CTRPluginFramework::PluginMenuImpl::UnStar(CTRPluginFramework::MenuItem*)
07010158 0000001c T CTRPluginFramework::PluginMenuImpl::Refresh()
07010174 00000010 T CTRPluginFramework::PluginMenuImpl::GetRunningInstance()
07010184 0000000c T CTRPluginFramework::PluginMenuImpl::SetHexEditorState(bool)
07010190 00000008 T CTRPluginFramework::PluginMenuImpl::GetHexEditorState() const
07010198 00000008 T CTRPluginFramework::PluginMenuImpl::ShowWelcomeMessage(bool)
070101a0 00000008 T CTRPluginFramework::PluginMenuImpl::IsOpen() const
070101a8 00000028 W std::_Vector_base<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::~_Vector_base()
070101a8 00000028 W std::_Vector_base<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::~_Vector_base()
070101d0 00000138 W __gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > > std::find<__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, void (*)()>(__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, __gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, void (* const&)())
07010308 0000003c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::PluginMenuImpl::Run()::{lambda(void (*)())#1}>::operator()<__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > > >(__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >) [clone .isra.0]
07010344 00000100 W void std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_realloc_insert<CTRPluginFramework::Event const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Event*, std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> > >, CTRPluginFramework::Event const&)
07010448 00000750 T CTRPluginFramework::PluginMenuImpl::Run()
07010b98 00000050 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_check_len(unsigned int, char const*) const
07010be8 000000a0 W std::vector<unsigned long, std::allocator<unsigned long> >::push_back(unsigned long const&)
07010c88 00000104 T CTRPluginFramework::PluginMenuImpl::WriteFavoritesToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
07010d8c 00000074 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
07010d8c 00000074 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
07010e00 00000198 W void std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >::_M_realloc_insert<CTRPluginFramework::Preferences::HotkeysInfos const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Preferences::HotkeysInfos*, std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> > >, CTRPluginFramework::Preferences::HotkeysInfos const&)
07010f98 00000120 T CTRPluginFramework::PluginMenuImpl::ExtractHotkeys(std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >&, CTRPluginFramework::MenuFolderImpl*, unsigned long&)
070110b8 000001a4 T CTRPluginFramework::PluginMenuImpl::WriteHotkeysToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
0701125c 00000048 W unsigned long* std::__uninitialized_default_n_1<true>::__uninit_default_n<unsigned long*, unsigned int>(unsigned long*, unsigned int)
070112a4 000000b0 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned int)
07011354 0000003c W std::vector<unsigned long, std::allocator<unsigned long> >::resize(unsigned int)
07011390 00000134 T CTRPluginFramework::PluginMenuImpl::LoadEnabledCheatsFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
070114c4 00000140 T CTRPluginFramework::PluginMenuImpl::LoadFavoritesFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
07011604 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework14PluginMenuImpl16_runningInstanceE
07011610 00000014 t _GLOBAL__sub_D__ZN18CTRPluginFramework14PluginMenuImpl16_runningInstanceE
07011624 0000003c T CTRPluginFramework::Menu::Open(CTRPluginFramework::MenuFolderImpl*, int)
07011660 00000058 T CTRPluginFramework::Menu::CloseAll()
070116b8 00000030 T CTRPluginFramework::Menu::~Menu()
070116b8 00000030 T CTRPluginFramework::Menu::~Menu()
070116e8 0000000c T CTRPluginFramework::Menu::Append(CTRPluginFramework::MenuItem*) const
070116f4 00000008 T CTRPluginFramework::Menu::GetFolder() const
070116fc 00000008 T CTRPluginFramework::Menu::GetRootFolder() const
07011704 00000044 T CTRPluginFramework::Menu::GetSelectedItem()
07011748 000003b4 T CTRPluginFramework::Menu::Draw() const
07011b00 00000098 T CTRPluginFramework::Menu::_ScrollUp(int)
07011b98 00000098 T CTRPluginFramework::Menu::_ScrollDown(int)
07011c30 00000244 T CTRPluginFramework::Menu::ProcessEvent(CTRPluginFramework::Event&, CTRPluginFramework::MenuItem**)
07011e78 0000016c T CTRPluginFramework::Menu::Update(CTRPluginFramework::Time const&)
07011fe4 00000068 T CTRPluginFramework::Menu::ShowNote()
0701204c 00000008 T CTRPluginFramework::Menu::CloseNote()
07012054 00000008 T CTRPluginFramework::Menu::IsNoteOpen()
0701205c 000000e4 T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
0701205c 000000e4 T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
07012140 0000012c T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
07012140 0000012c T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
0701226c 00000054 W std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >)
070122c0 00000044 T CTRPluginFramework::Menu::Pop()
07012304 000000e8 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_insert<CTRPluginFramework::MenuItem* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >, CTRPluginFramework::MenuItem* const&)
070123ec 000000b4 T CTRPluginFramework::Menu::Insert(CTRPluginFramework::MenuItem*)
070124a0 00000008 W CTRPluginFramework::MenuItem::GetNote[abi:cxx11]()
070124a8 00000030 W CTRPluginFramework::MenuItem::~MenuItem()
070124a8 00000030 W CTRPluginFramework::MenuItem::~MenuItem()
070124d8 00000020 W CTRPluginFramework::MenuItem::~MenuItem()
070124f8 000000e4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
070124f8 000000e4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
070125dc 00000020 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
070125fc 00000010 T CTRPluginFramework::MenuFolderImpl::ItemsCount() const
0701260c 00000050 T CTRPluginFramework::MenuFolderImpl::GetItem(unsigned long)
0701265c 00000018 T CTRPluginFramework::MenuFolderImpl::operator[](unsigned long)
07012674 00000024 T CTRPluginFramework::MenuFolderImpl::HasParent()
07012698 000000b0 T CTRPluginFramework::MenuFolderImpl::Clear()
07012748 00000010 T CTRPluginFramework::MenuFolderImpl::_Open(CTRPluginFramework::MenuFolderImpl*, int, bool)
07012758 00000020 T CTRPluginFramework::MenuFolderImpl::_Close(int&, bool)
07012778 00000058 T CTRPluginFramework::MenuFolderImpl::Append(CTRPluginFramework::MenuItem*, bool)
070127d0 000000d4 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070127d0 000000d4 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070128a4 00000010 T CTRPluginFramework::MenuItem::NoteChanged()
070128b4 00000010 T CTRPluginFramework::MenuItem::HasNoteChanged() const
070128c4 00000010 T CTRPluginFramework::MenuItem::HandledNoteChanges()
070128d4 00000074 T CTRPluginFramework::MenuItem::_DisableFolder(CTRPluginFramework::MenuFolderImpl*)
07012948 0000014c T CTRPluginFramework::MenuItem::Hide()
07012a94 00000040 T CTRPluginFramework::MenuItem::_EnableFolder(CTRPluginFramework::MenuFolderImpl*)
07012ad4 000000e8 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_insert<CTRPluginFramework::MenuItem*>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >, CTRPluginFramework::MenuItem*&&)
07012bbc 000000e4 T CTRPluginFramework::MenuItem::Show()
07012ca0 00000030 t CTRPluginFramework::GetIndex(int)
07012cd0 00000134 T CTRPluginFramework::HotkeysModifier::_DrawBottom()
07012e04 00000074 T CTRPluginFramework::HotkeysModifier::_Update()
07012e78 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
07012e78 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
07012ee4 00000094 T CTRPluginFramework::HotkeysModifier::_DrawTop() const
07012f78 000001cc T CTRPluginFramework::HotkeysModifier::operator()()
07013144 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::Button*>(CTRPluginFramework::Button*, CTRPluginFramework::Button*)
07013170 00000038 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
07013170 00000038 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
070131a8 00000110 W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::_M_realloc_insert<CTRPluginFramework::Button const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Button*, std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> > >, CTRPluginFramework::Button const&)
070132b8 0000003c W std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::push_back(CTRPluginFramework::Button const&)
070132f4 0000015c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070132f4 0000015c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07013450 00000058 t CTRPluginFramework::SelectableEntryCount(CTRPluginFramework::MenuFolderImpl&)
070134a8 000000c0 t CTRPluginFramework::ScrollUp(int&, CTRPluginFramework::MenuFolderImpl&, int)
07013568 000000ec t CTRPluginFramework::ScrollDown(int&, CTRPluginFramework::MenuFolderImpl&, int)
07013654 000000bc t __tcf_1
07013710 0000000c T CTRPluginFramework::PluginMenuHome::Append(CTRPluginFramework::MenuItem*) const
0701371c 000000cc T CTRPluginFramework::PluginMenuHome::Refresh()
070137e8 00000328 T CTRPluginFramework::PluginMenuHome::_RenderTop()
07013b10 00000134 T CTRPluginFramework::PluginMenuHome::_TriggerEntry()
07013c48 00000498 T CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)
070140e0 00000118 T CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()
070141f8 00000090 T CTRPluginFramework::PluginMenuHome::_controllerBtn_OnClick()
07014288 00000038 T CTRPluginFramework::PluginMenuHome::_keyboardBtn_OnClick()
070142c0 0000002c T CTRPluginFramework::PluginMenuHome::_InfoBtn_OnClick()
070142ec 000000ec T CTRPluginFramework::PluginMenuHome::UnStar(CTRPluginFramework::MenuItem*)
070143d8 00000084 T CTRPluginFramework::PluginMenuHome::_StarItem()
0701445c 00000080 T CTRPluginFramework::PluginMenuHome::Init()
070144dc 0000005c T CTRPluginFramework::PluginMenuHome::Close(CTRPluginFramework::MenuFolderImpl*)
07014538 000000c0 T CTRPluginFramework::PluginMenuHome::UpdateNote()
070145f8 000004ac T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
070145f8 000004ac T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07014aa4 00000050 t CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
07014af4 00000088 T CTRPluginFramework::PluginMenuHome::_RenderBottom()
07014b80 000003ac T CTRPluginFramework::PluginMenuHome::_Update(CTRPluginFramework::Time)
07014f2c 00000224 T CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)
07015150 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#1}::_FUN()
07015164 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#2}::_FUN()
07015178 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#3}::_FUN()
0701518c 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#14}::_FUN()
07015190 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#13}::_FUN()
07015194 00000028 t CTRPluginFramework::Screenshot_Enabler(CTRPluginFramework::MenuEntryTools*)
070151bc 000000bc t __tcf_1
07015278 00000040 t std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned int) [clone .isra.0]
070152b8 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07015310 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
07015350 00000024 W CTRPluginFramework::Preferences::Toggle(unsigned long long)
07015374 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#12}::_FUN()
07015388 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#11}::_FUN()
0701539c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#10}::_FUN()
070153b0 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#9}::_FUN()
070153c4 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#8}::_FUN()
070153d8 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#7}::_FUN()
070153ec 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#6}::_FUN()
07015400 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#5}::_FUN()
07015414 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#4}::_FUN()
07015428 00000150 T CTRPluginFramework::PluginMenuTools::UpdateSettings()
07015578 00000014 T CTRPluginFramework::PluginMenuTools::TriggerHexEditor(bool) const
0701558c 0000014c T CTRPluginFramework::PluginMenuTools::_RenderBottom()
070156d8 00000040 T CTRPluginFramework::PluginMenuTools::_Update(CTRPluginFramework::Time)
07015718 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07015798 00000180 t CTRPluginFramework::InitFsTryOpenFileHook() [clone .part.0]
07015918 000000c0 t CTRPluginFramework::_DisplayLoadedFiles(CTRPluginFramework::MenuEntryTools*)
070159d8 00000064 t CTRPluginFramework::MenuHotkeyModifier()
07015a3c 00000b2c T CTRPluginFramework::PluginMenuTools::InitMenu()
07016568 00000068 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
070165d0 00000108 t CTRPluginFramework::FsTryOpenFileCallback(unsigned long, unsigned short*, unsigned long)
070166d8 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
070166d8 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
07016868 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07016914 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct(unsigned int, char)
07016984 00000114 W std::__cxx11::to_string(int)
07016a98 00000190 t CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)
07016c28 0000016c t CTRPluginFramework::ConfirmBeforeProceed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07016d94 00000048 t CTRPluginFramework::Reboot()
07016ddc 00000054 t CTRPluginFramework::Shutdown()
07016e30 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::replace(unsigned int, unsigned int, char const*, unsigned int)
07016e7c 0000013c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > CTRPluginFramework::operator<< <unsigned long, (void*)0>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
07016fb8 000001fc t CTRPluginFramework::UpdateScreenshotText()
070171b4 00000460 t CTRPluginFramework::ScreenshotMenuCallback()
07017614 00000130 T CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)
07017744 00000164 T CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
070178a8 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
070178dc 00000044 t CTRPluginFramework::ScreenshotMenuCallback()::{lambda(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)#1}::_FUN(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)
07017920 0000065c t CTRPluginFramework::EditBacklight(CTRPluginFramework::MenuEntryTools*)
07017f7c 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
07017f9c 00000048 t _GLOBAL__sub_D__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
07017fe4 0000003c T CTRPluginFramework::PluginMenuTools::_RenderTop()
07018020 00000010 t CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
07018030 00000044 T CTRPluginFramework::SubMenu::~SubMenu()
07018030 00000044 T CTRPluginFramework::SubMenu::~SubMenu()
07018074 0000001c T CTRPluginFramework::SubMenu::operator()()
07018090 000001f8 T CTRPluginFramework::SubMenu::Draw()
07018288 000000e0 T CTRPluginFramework::SubMenu::ProcessEvent(CTRPluginFramework::Event const&)
07018368 00000008 T CTRPluginFramework::SubMenu::IsOpen()
07018370 0000001c T CTRPluginFramework::SubMenu::OptionsCount()
0701838c 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
070183c4 00000084 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
070183c4 00000084 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07018448 000001ac T CTRPluginFramework::SubMenu::ChangeOptions(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
070185f4 00000004 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
070185f4 00000004 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
070185f8 00000004 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
070185f8 00000004 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
070185fc 00000004 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
070185fc 00000004 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
07018600 00000018 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
07018618 00000018 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
07018630 00000018 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
07018648 0000019c T CTRPluginFramework::HexEditor::ByteView::Draw()
070187e4 0000013c T CTRPluginFramework::HexEditor::AsmView::Draw()
07018920 000000f4 T CTRPluginFramework::HexEditor::IntegerView::Draw()
07018a14 00000040 t std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned int) [clone .isra.0]
07018a54 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07018aac 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
07018aec 0000001c T CTRPluginFramework::HexEditor::_RenderBottom()
07018b08 0000001c T CTRPluginFramework::HexEditor::_ClearHistory()
07018b24 00000074 T CTRPluginFramework::HexEditor::Goto(unsigned long, bool)
07018b98 0000002c T CTRPluginFramework::HexEditor::_MoveBackward()
07018bc4 0000003c T CTRPluginFramework::HexEditor::_MoveForward()
07018c00 00000010 T CTRPluginFramework::HexEditor::Refresh()
07018c10 00000044 T CTRPluginFramework::HexEditor::_ApplyChanges()
07018c54 00000038 T CTRPluginFramework::HexEditor::_DiscardChanges()
07018c8c 0000002c T CTRPluginFramework::HexEditor::_GetSelectedItem()
07018cb8 00000080 T CTRPluginFramework::HexEditor::Context::ScrollUp(unsigned long, bool)
07018d38 00000094 T CTRPluginFramework::HexEditor::Context::ScrollDown(unsigned long, bool)
07018dcc 000000cc T CTRPluginFramework::HexEditor::ByteView::EditValueAtCursor(unsigned long)
07018e98 000000c0 T CTRPluginFramework::HexEditor::IntegerView::EditValueAtCursor(unsigned long)
07018f58 000000b0 T CTRPluginFramework::HexEditor::AsmView::EditValueAtCursor(unsigned long)
07019008 000001b4 T CTRPluginFramework::HexEditor::IView::ProcessEventsCommon(CTRPluginFramework::HexEditor::Context&, CTRPluginFramework::Event&, short)
070191bc 00000010 T CTRPluginFramework::HexEditor::ByteView::ProcessEvent(CTRPluginFramework::Event&)
070191cc 00000010 T CTRPluginFramework::HexEditor::IntegerView::ProcessEvent(CTRPluginFramework::Event&)
070191dc 00000010 T CTRPluginFramework::HexEditor::AsmView::ProcessEvent(CTRPluginFramework::Event&)
070191ec 00000040 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::at(unsigned int)
0701922c 00000040 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::_M_erase_at_end(CTRPluginFramework::HexEditor::Item*)
0701926c 0000006c T CTRPluginFramework::HexEditor::SetView(unsigned long)
070192d8 000000d4 T CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)
070193ac 000000e8 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&)
07019494 00000058 T CTRPluginFramework::HexEditor::_SaveThisAddress()
070194ec 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07019570 00000200 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
07019570 00000200 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
07019770 000001c8 T CTRPluginFramework::HexEditor::_PromptForAddress(int)
07019938 000000e4 T CTRPluginFramework::HexEditor::_JumpTo(int)
07019a1c 000000b8 T CTRPluginFramework::HexEditor::_CreateCheat()
07019ad4 00000260 T CTRPluginFramework::HexEditor::_RenderTop(void*)
07019d34 00000104 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07019e38 00000184 T CTRPluginFramework::HexEditor::_BrowseHistory()
07019fbc 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
0701a04c 00000270 T CTRPluginFramework::HexEditor::AsmView::UpdateView()
0701a2bc 000001e0 T CTRPluginFramework::HexEditor::IntegerView::UpdateView()
0701a49c 000002b0 T CTRPluginFramework::HexEditor::ByteView::UpdateView()
0701a74c 00000060 W CTRPluginFramework::HexEditor::Item* std::__uninitialized_default_n_1<false>::__uninit_default_n<CTRPluginFramework::HexEditor::Item*, unsigned int>(CTRPluginFramework::HexEditor::Item*, unsigned int)
0701a7ac 00000184 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::_M_default_append(unsigned int)
0701a930 000001c8 T CTRPluginFramework::HexEditor::_Update()
0701aaf8 0000028c T CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0701ad84 00000014 T CTRPluginFramework::MenuEntryImpl::Disable()
0701ad98 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0701adf0 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701adf0 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701ae18 00000020 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701ae38 00000008 T CTRPluginFramework::MenuEntryImpl::GetArg() const
0701ae40 00000014 T CTRPluginFramework::MenuEntryImpl::WasJustActivated() const
0701ae54 0000000c T CTRPluginFramework::MenuEntryImpl::IsActivated() const
0701ae60 00000008 T CTRPluginFramework::MenuEntryImpl::AsMenuEntry() const
0701ae68 00000024 T CTRPluginFramework::MenuEntryImpl::_TriggerState()
0701ae8c 00000030 T CTRPluginFramework::MenuEntryImpl::Enable()
0701aebc 0000001c T CTRPluginFramework::MenuEntryImpl::_MustBeRemoved() const
0701aed8 00000068 T CTRPluginFramework::MenuEntryImpl::_Execute()
0701af40 000000ec T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701af40 000000ec T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701b02c 000000f0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701b02c 000000f0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701b11c 00000204 T CTRPluginFramework::MenuEntryImpl::GetNote[abi:cxx11]()
0701b320 00000020 T CTRPluginFramework::MenuEntryTools::Disable()
0701b340 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0701b340 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0701b360 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0701b380 00000058 T CTRPluginFramework::MenuEntryTools::Enable()
0701b3d8 00000084 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0701b3d8 00000084 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0701b45c 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701b45c 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701b4bc 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701b4bc 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701b51c 00000004 T CTRPluginFramework::MenuEntryTools::TriggerState()
0701b520 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0701b578 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
0701b5b8 00000034 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::clear()
0701b5ec 00000344 t CTRPluginFramework::CreateFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0701b930 000001e8 T CTRPluginFramework::GuideReader::GuideReader()
0701b930 000001e8 T CTRPluginFramework::GuideReader::GuideReader()
0701bb18 000000d4 T CTRPluginFramework::GuideReader::_LoadBMP()
0701bbec 000003d8 T CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&)
0701bfc4 0000015c T CTRPluginFramework::GuideReader::Draw()
0701c120 00000074 T CTRPluginFramework::GuideReader::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0701c194 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0701c1ec 00000028 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check(unsigned int, char const*) const [clone .isra.0]
0701c214 00000038 t CTRPluginFramework::TouchKey* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey> >(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey>&) [clone .isra.0]
0701c24c 00000040 t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_allocate(unsigned int) [clone .isra.0]
0701c28c 00000014 t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_deallocate(CTRPluginFramework::TouchKey*, unsigned int) [clone .isra.0]
0701c2a0 0000007c T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0701c2a0 0000007c T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0701c31c 00000008 T CTRPluginFramework::KeyboardImpl::IsHexadecimal() const
0701c324 00000008 T CTRPluginFramework::KeyboardImpl::SetMaxInput(unsigned long)
0701c32c 00000008 T CTRPluginFramework::KeyboardImpl::CanAbort(bool)
0701c334 00000008 T CTRPluginFramework::KeyboardImpl::GetInput[abi:cxx11]()
0701c33c 00000008 T CTRPluginFramework::KeyboardImpl::GetMessage[abi:cxx11]()
0701c344 00000008 T CTRPluginFramework::KeyboardImpl::SetConvertCallback(void* (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool))
0701c34c 00000008 T CTRPluginFramework::KeyboardImpl::OnKeyboardEvent(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&))
0701c354 0000005c T CTRPluginFramework::KeyboardImpl::Clear()
0701c3b0 000001cc T CTRPluginFramework::KeyboardImpl::_RenderTop()
0701c57c 000004e0 T CTRPluginFramework::KeyboardImpl::_RenderBottom()
0701ca5c 000001c4 T CTRPluginFramework::KeyboardImpl::_UpdateScroll(float, bool)
0701cc20 00000068 T CTRPluginFramework::UnitsToNextChar(char const*, int)
0701cc88 00000090 T CTRPluginFramework::UnitsToPreviousChar(char const*, int)
0701cd18 00000080 T CTRPluginFramework::KeyboardImpl::_ScrollUp()
0701cd98 00000084 T CTRPluginFramework::KeyboardImpl::_ScrollDown()
0701ce1c 0000015c T CTRPluginFramework::KeyboardImpl::_UpdateScrollInfos()
0701cf78 0000016c T CTRPluginFramework::KeyboardImpl::_Update(float)
0701d0e4 00000060 T CTRPluginFramework::KeyboardImpl::_CheckInput()
0701d144 00000074 T CTRPluginFramework::KeyboardImpl::_CheckButtons(int&)
0701d1b8 000000a8 T CTRPluginFramework::KeyboardImpl::_ChangeManualKey(int, bool)
0701d260 0000051c T CTRPluginFramework::KeyboardImpl::_HandleManualKeyPress(CTRPluginFramework::Key)
0701d77c 00000008 T CTRPluginFramework::KeyboardImpl::CanChangeLayout(bool)
0701d784 00000028 W std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
0701d784 00000028 W std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
0701d7ac 00000074 W CTRPluginFramework::Rect<int>::Contains(int, int) const
0701d820 00000060 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_check_len(unsigned int, char const*) const
0701d880 000000ec W void std::vector<float, std::allocator<float> >::_M_realloc_insert<float const&>(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
0701d96c 0000002c W std::vector<float, std::allocator<float> >::push_back(float const&)
0701d998 000000e8 W void std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::_M_realloc_insert<CTRPluginFramework::TouchKeyString* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKeyString**, std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> > >, CTRPluginFramework::TouchKeyString* const&)
0701da80 0000002c W std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::push_back(CTRPluginFramework::TouchKeyString* const&)
0701daac 000002c0 T CTRPluginFramework::KeyboardImpl::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool)
0701dd6c 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned int, unsigned int)
0701ddd0 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0701de30 00000054 t decltype (::new ((void*)(0)) CTRPluginFramework::TouchKey((declval<char const (&) [4]>)(), (declval<CTRPluginFramework::Rect<int>&>)())) std::construct_at<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&) [clone .isra.0]
0701de84 00000054 t decltype (::new ((void*)(0)) CTRPluginFramework::TouchKey((declval<char const (&) [3]>)(), (declval<CTRPluginFramework::Rect<int>&>)())) std::construct_at<CTRPluginFramework::TouchKey, char const (&) [3], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [3], CTRPluginFramework::Rect<int>&) [clone .isra.0]
0701ded8 00000058 t decltype (::new ((void*)(0)) CTRPluginFramework::TouchKey((declval<char const (&) [4]>)(), (declval<CTRPluginFramework::Rect<int>&>)(), (declval<int>)())) std::construct_at<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&, int>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&, int&&) [clone .isra.0]
0701df30 000000f4 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
0701e024 00000054 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
0701e078 00000714 T CTRPluginFramework::KeyboardImpl::_CheckKeys()
0701e78c 0000007c T CTRPluginFramework::KeyboardImpl::operator()(int&)
0701e808 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
0701e83c 000001d8 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701e83c 000001d8 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701ea14 000001c8 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701ea14 000001c8 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701ebdc 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::TouchKey*>(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*)
0701ec08 00000118 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&) [clone .isra.0]
0701ed20 000000d8 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&, int>(char const (&) [4], CTRPluginFramework::Rect<int>&, int&&) [clone .isra.0]
0701edf8 000000d0 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [3], CTRPluginFramework::Rect<int>&>(char const (&) [3], CTRPluginFramework::Rect<int>&) [clone .isra.0]
0701eec8 000000d0 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&>(char const (&) [4], CTRPluginFramework::Rect<int>&) [clone .isra.0]
0701ef98 000008bc T CTRPluginFramework::KeyboardImpl::_QwertyNintendo()
0701f854 0000010c t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char&, CTRPluginFramework::Rect<int>&>(char&, CTRPluginFramework::Rect<int>&) [clone .isra.0]
0701f960 0000010c t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char, CTRPluginFramework::Rect<int>&>(char&&, CTRPluginFramework::Rect<int>&) [clone .isra.0]
0701fa6c 000001a8 T CTRPluginFramework::KeyboardImpl::_DigitKeyboard(std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >&)
0701fc14 00000048 T CTRPluginFramework::KeyboardImpl::_Decimal()
0701fc5c 00000054 T CTRPluginFramework::KeyboardImpl::_Hexadecimal()
0701fcb0 00000a54 T CTRPluginFramework::KeyboardImpl::_QwertySymbols()
07020704 0000057c T CTRPluginFramework::KeyboardImpl::_QwertyUpCase()
07020c80 0000057c T CTRPluginFramework::KeyboardImpl::_QwertyLowCase()
070211fc 00000040 T CTRPluginFramework::KeyboardImpl::_Qwerty()
0702123c 0000004c T CTRPluginFramework::KeyboardImpl::SetLayout(CTRPluginFramework::Layout)
07021288 0000049c T CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)
07021724 00000368 T CTRPluginFramework::KeyboardImpl::Run()
07021a8c 00000038 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
07021a8c 00000038 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
07021ac4 0000002c t _GLOBAL__sub_D__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
07021af0 00000014 t CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::{lambda(void*)#1}::_FUN(void*)
07021b04 00000024 t CTRPluginFramework::PluginMenuActionReplay::Initialize()::{lambda(void*)#1}::_FUN(void*)
07021b28 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07021b80 00000040 t std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned int) [clone .isra.0]
07021bc0 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
07021c00 00000054 T CTRPluginFramework::PluginMenuActionReplay::_ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
07021c54 00000024 T CTRPluginFramework::PluginMenuActionReplay::_CutBtn_OnClick()
07021c78 00000028 T CTRPluginFramework::PluginMenuActionReplay::_PasteBtn_OnClick()
07021ca0 00000030 W CTRPluginFramework::ARCode::~ARCode()
07021ca0 00000030 W CTRPluginFramework::ARCode::~ARCode()
07021cd0 00000034 T CTRPluginFramework::PluginMenuActionReplay::Initialize()
07021d04 00000014 t __tcf_1
07021d18 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07021d98 00000120 T CTRPluginFramework::PluginMenuActionReplay::SaveCodes()
07021eb8 000000e4 T CTRPluginFramework::PluginMenuActionReplay::_TrashBtn_OnClick()
07021f9c 0000005c t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07021ff8 00000178 T CTRPluginFramework::PluginMenuActionReplay::_NewBtn_OnClick()
07022170 0000011c t CTRPluginFramework::ProcessPathString(unsigned char*)
0702228c 00000254 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
0702228c 00000254 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
070224e0 000001cc T CTRPluginFramework::PluginMenuActionReplay::_OpenFileBtn_OnClick()
070226ac 00000178 T CTRPluginFramework::PluginMenuActionReplay::_EditorBtn_OnClick()
07022824 00000120 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
07022944 0000003c t CTRPluginFramework::ARCode& std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&) [clone .isra.0]
07022980 0000014c T CTRPluginFramework::PluginMenuActionReplay::NewARCode(unsigned char, unsigned long, unsigned long)
07022acc 0000003c W unsigned long* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned long const, unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
07022b08 00000104 t std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&) [clone .isra.0]
07022c0c 0000026c T CTRPluginFramework::PluginMenuActionReplay::_DuplicateBtn_OnClick()
07022e78 000000cc T CTRPluginFramework::PluginMenuActionReplay::_DrawBottom()
07022f44 000001bc T CTRPluginFramework::PluginMenuActionReplay::_Update(CTRPluginFramework::Time const&)
07023100 000001a0 T CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)
070232a0 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
070232f8 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
07023338 00000118 T CTRPluginFramework::PluginMenuSearch::_RenderBottom()
07023450 00000058 T CTRPluginFramework::PluginMenuSearch::_Update(CTRPluginFramework::Time)
070234a8 00000010 T CTRPluginFramework::PluginMenuSearch::_cancelBtn_OnClick()
070234b8 00000034 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::push_back(CTRPluginFramework::Search* const&)
070234ec 0000002c W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::pop_back()
07023518 00000070 T CTRPluginFramework::PluginMenuSearch::_undoBtn_OnClick()
07023588 000000ec W void std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::_M_realloc_insert<CTRPluginFramework::Region const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Region*, std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > >, CTRPluginFramework::Region const&)
07023674 0000003c W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::push_back(CTRPluginFramework::Region const&)
070236b0 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
07023730 00000060 T CTRPluginFramework::PluginMenuSearch::_RenderTop()
07023790 0000016c T CTRPluginFramework::PluginMenuSearch::_PopulateSearchType(bool)
070238fc 00000470 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
070238fc 00000470 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
07023d6c 00000264 T CTRPluginFramework::PluginMenuSearch::_ListRegion()
07023fd0 00000040 T CTRPluginFramework::PluginMenuSearch::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
07024010 000000a8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned int, char const*, std::__va_list), unsigned int, char const*, ...)
070240b8 000002bc T CTRPluginFramework::PluginMenuSearch::RestoreSearchState()
07024374 0000016c t CTRPluginFramework::ClearSearchFolder()
070244e0 000000e8 T CTRPluginFramework::PluginMenuSearch::_resetBtn_OnClick()
070245c8 000005f0 T CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)
07024bb8 0000003c W CTRPluginFramework::Region* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::Region const, CTRPluginFramework::Region>(CTRPluginFramework::Region const*, CTRPluginFramework::Region const*, CTRPluginFramework::Region*)
07024bf4 000002f0 T CTRPluginFramework::PluginMenuSearch::_searchBtn_OnClick()
07024ee4 000003ac T CTRPluginFramework::PluginMenuSearch::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07025290 00000024 t std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_M_allocate(unsigned int) [clone .part.0] [clone .isra.0]
070252b4 00000064 t std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl* const*, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl* const*, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >) [clone .isra.0]
07025318 00000064 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)::{lambda(CTRPluginFramework::MenuEntryImpl*)#1}>::operator()<__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > > >(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >) [clone .isra.0]
0702537c 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
0702537c 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
070253b8 00000138 T CTRPluginFramework::PluginMenuExecuteLoop::Remove(CTRPluginFramework::MenuEntryImpl*)
070254f0 0000017c T CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(CTRPluginFramework::MenuEntryActionReplay*)
0702566c 00000058 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteAR()
070256c4 00000194 T CTRPluginFramework::PluginMenuExecuteLoop::operator()()
07025858 00000018 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteBuiltin()
07025870 000001c0 T CTRPluginFramework::PluginMenuExecuteLoop::WriteEnabledCheatsToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
07025a30 000000e8 W void std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryImpl* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, CTRPluginFramework::MenuEntryImpl* const&)
07025b18 000001c0 T CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)
07025cd8 000000e8 W void std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryActionReplay* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryActionReplay**, std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> > >, CTRPluginFramework::MenuEntryActionReplay* const&)
07025dc0 00000088 T CTRPluginFramework::PluginMenuExecuteLoop::AddAR(CTRPluginFramework::MenuEntryActionReplay*)
07025e48 00000218 W CTRPluginFramework::Icon::DrawImg(unsigned char*, int, int, int, int)
07026060 0000002c T CTRPluginFramework::Icon::DrawAbout(int, int)
0702608c 0000003c T CTRPluginFramework::Icon::DrawCapsLockOn(int, int, bool)
070260c8 0000003c T CTRPluginFramework::Icon::DrawCheckBox(int, int, bool)
07026104 0000003c T CTRPluginFramework::Icon::DrawClearSymbol(int, int, bool)
07026140 0000003c T CTRPluginFramework::Icon::DrawClipboard(int, int, bool)
0702617c 0000003c T CTRPluginFramework::Icon::DrawClose(int, int, bool)
070261b8 0000002c T CTRPluginFramework::Icon::DrawController(int, int)
070261e4 0000003c T CTRPluginFramework::Icon::DrawCut(int, int, bool)
07026220 0000003c T CTRPluginFramework::Icon::DrawDuplicate(int, int, bool)
0702625c 0000003c T CTRPluginFramework::Icon::DrawEdit(int, int, bool)
07026298 0000003c T CTRPluginFramework::Icon::DrawEnterKey(int, int, bool)
070262d4 0000002c T CTRPluginFramework::Icon::DrawFolder(int, int)
07026300 0000003c T CTRPluginFramework::Icon::DrawAddFavorite(int, int, bool)
0702633c 0000002c T CTRPluginFramework::Icon::DrawFavorite(int, int)
07026368 0000002c T CTRPluginFramework::Icon::DrawFile(int, int)
07026394 0000002c T CTRPluginFramework::Icon::DrawGameController(int, int)
070263c0 0000003c T CTRPluginFramework::Icon::DrawGameController25(int, int, bool)
070263fc 0000002c T CTRPluginFramework::Icon::DrawGrid(int, int)
07026428 0000003c T CTRPluginFramework::Icon::DrawInfo(int, int, bool)
07026464 0000002c T CTRPluginFramework::Icon::DrawGuide(int, int)
07026490 00000034 T CTRPluginFramework::Icon::DrawHandCursor(int, int)
070264c4 0000003c T CTRPluginFramework::Icon::DrawKeyboard(int, int, bool)
07026500 0000002c T CTRPluginFramework::Icon::DrawMore(int, int)
0702652c 0000003c T CTRPluginFramework::Icon::DrawPlus(int, int, bool)
07026568 0000002c T CTRPluginFramework::Icon::DrawRAM(int, int)
07026594 0000002c T CTRPluginFramework::Icon::DrawRestart(int, int)
070265c0 0000002c T CTRPluginFramework::Icon::DrawRocket(int, int)
070265ec 0000002c T CTRPluginFramework::Icon::DrawSave(int, int)
07026618 0000002c T CTRPluginFramework::Icon::DrawSearch(int, int)
07026644 0000002c T CTRPluginFramework::Icon::DrawSettings(int, int)
07026670 0000002c T CTRPluginFramework::Icon::DrawShutdown(int, int)
0702669c 0000002c T CTRPluginFramework::Icon::DrawTools(int, int)
070266c8 0000003c T CTRPluginFramework::Icon::DrawTrash(int, int, bool)
07026704 0000002c T CTRPluginFramework::Icon::DrawUnsplash(int, int)
07026730 0000001c T CTRPluginFramework::Icon::DrawCustomIcon(CTRPluginFramework::CustomIcon const&, int, int)
0702674c 00000034 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Icon17DefaultCustomIconE
07026780 00000024 t fontGetSystemFont
070267a4 00000010 T CTRPluginFramework::Glyph::Width() const
070267b4 000004e4 T CTRPluginFramework::GetOriginalGlyph(unsigned long)
07026c98 0000034c T CTRPluginFramework::ShrinkGlyph(unsigned char*, unsigned char*)
07026fe4 000000c4 T CTRPluginFramework::Font::Initialize()
070270a8 0000001c W std::_Hashtable<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets()
070270c4 0000018c W std::_Hashtable<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<unsigned long const, unsigned long>, false>*, unsigned int)
07027250 000000c8 W std::__detail::_Map_base<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](unsigned long const&)
07027318 0000012c T CTRPluginFramework::Font::CacheGlyph(unsigned long)
07027444 0000008c T CTRPluginFramework::Font::GetGlyph(unsigned char*&)
070274d0 00000020 T CTRPluginFramework::Font::GetGlyph(char)
070274f0 00000048 t _GLOBAL__sub_I__ZN18CTRPluginFramework15g_fontAllocatedE
07027538 00000078 t _GLOBAL__sub_D__ZN18CTRPluginFramework15g_fontAllocatedE
070275b0 00000170 t CTRPluginFramework::DrawLineV(unsigned long, CTRPluginFramework::Color const&, unsigned char*, unsigned long)
07027720 00000020 t __tcf_1
07027740 000001ec t CTRPluginFramework::Vector<int>& std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::emplace_back<CTRPluginFramework::Vector<int> >(CTRPluginFramework::Vector<int>&&) [clone .isra.0]
0702792c 000001a4 T CTRPluginFramework::Renderer::DrawLine(int, int, int, CTRPluginFramework::Color const&, int)
07027ad0 00000114 T CTRPluginFramework::Renderer::DrawStippledLine(int, int, int, CTRPluginFramework::Color const&, int)
07027be4 00000094 T CTRPluginFramework::Renderer::DrawRect(int, int, int, int, CTRPluginFramework::Color const&, bool, int)
07027c78 000000a4 T CTRPluginFramework::Renderer::DrawRect(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, bool)
07027d1c 000002b8 T CTRPluginFramework::Renderer::DrawRect2(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07027fd4 00000050 W std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::pop_front()
07028024 00000104 W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_realloc_insert<CTRPluginFramework::Line<int> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Line<int>*, std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > > >, CTRPluginFramework::Line<int>&&)
07028128 0000003c t CTRPluginFramework::Line<int>& std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::emplace_back<CTRPluginFramework::Line<int> >(CTRPluginFramework::Line<int>&&) [clone .isra.0]
07028168 0000069c T CTRPluginFramework::Renderer::ComputeRoundedRectangle(std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >&, CTRPluginFramework::Rect<int> const&, float, int)
07028804 00000198 T CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0702899c 00000084 T CTRPluginFramework::Renderer::DrawPixel(int, int, CTRPluginFramework::Color const&)
07028a20 00000180 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&)
07028ba0 000001f4 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07028d94 000000a0 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color)
07028e34 000001ec T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color, CTRPluginFramework::Color)
07029020 00000030 T CTRPluginFramework::Renderer::LinuxFontSize(char const*)
07029050 000000bc T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
07029050 000000bc T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0702910c 00000028 T CTRPluginFramework::Window::~Window()
0702910c 00000028 T CTRPluginFramework::Window::~Window()
07029134 00000064 T CTRPluginFramework::Window::Draw() const
07029198 000000dc T CTRPluginFramework::Window::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07029274 00000018 T CTRPluginFramework::Window::DrawButton() const
0702928c 00000018 T CTRPluginFramework::Window::Update(bool, CTRPluginFramework::Vector<int> const&) const
070292a4 00000018 T CTRPluginFramework::Window::MustClose() const
070292bc 00000028 T CTRPluginFramework::Window::Close() const
070292e4 00000004 T CTRPluginFramework::Window::GetRect() const
070292e8 00000034 T CTRPluginFramework::Window::UpdateBackgrounds()
0702931c 00000080 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Window12BottomWindowE
0702939c 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework6Window12BottomWindowE
070293bc 00000014 T CTRPluginFramework::UIContainer::UIContainer()
070293bc 00000014 T CTRPluginFramework::UIContainer::UIContainer()
070293d0 00000024 T CTRPluginFramework::UIContainer::Draw()
070293f4 00000034 T CTRPluginFramework::UIContainer::Update(bool, CTRPluginFramework::Vector<int> const&)
07029428 000000e8 W void std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> >::_M_realloc_insert<CTRPluginFramework::Drawable* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Drawable**, std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> > >, CTRPluginFramework::Drawable* const&)
07029510 00000034 T CTRPluginFramework::UIContainer::operator+=(CTRPluginFramework::Drawable*)
07029544 00000008 W CTRPluginFramework::Drawable::operator()()
0702954c 000000e4 T CTRPluginFramework::TouchKey::Update(bool, CTRPluginFramework::Vector<int> const&)
07029630 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07029688 0000008c T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07029688 0000008c T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07029714 000000b8 T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
07029714 000000b8 T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
070297cc 0000008c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
070297cc 0000008c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
07029858 0000004c T CTRPluginFramework::TouchKey::Clear()
070298a4 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
070298a4 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
070298c4 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
070298e4 00000008 T CTRPluginFramework::TouchKey::Enable(bool)
070298ec 00000008 T CTRPluginFramework::TouchKey::IsEnabled()
070298f4 00000070 T CTRPluginFramework::TouchKey::DrawCharacter(CTRPluginFramework::Color const&)
07029964 00000070 T CTRPluginFramework::TouchKey::Draw()
070299d4 00000008 T CTRPluginFramework::TouchKey::SetAcceptSoundEvent(CTRPluginFramework::SoundEngine::Event)
070299dc 000000e8 W void std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> >::_M_realloc_insert<CTRPluginFramework::Glyph* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Glyph**, std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> > >, CTRPluginFramework::Glyph* const&)
07029ac4 000000d4 W CTRPluginFramework::KeyContent::KeyContent(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07029ac4 000000d4 W CTRPluginFramework::KeyContent::KeyContent(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07029b98 000000d0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
07029b98 000000d0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
07029c68 00000168 T CTRPluginFramework::TouchKey::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07029dd0 00000020 T CTRPluginFramework::PrivColor::_ReadRGBA8(unsigned char*)
07029df0 00000020 T CTRPluginFramework::PrivColor::_ReadBGR8(unsigned char*)
07029e10 0000002c T CTRPluginFramework::PrivColor::_ReadRGB565(unsigned char*)
07029e3c 00000034 T CTRPluginFramework::PrivColor::_ReadRGB5A1(unsigned char*)
07029e70 00000028 T CTRPluginFramework::PrivColor::_ReadRGBA4(unsigned char*)
07029e98 00000028 T CTRPluginFramework::PrivColor::_WriteRGBA8(unsigned char*, CTRPluginFramework::Color const&)
07029ec0 00000020 T CTRPluginFramework::PrivColor::_WriteBGR8(unsigned char*, CTRPluginFramework::Color const&)
07029ee0 00000030 T CTRPluginFramework::PrivColor::_WriteRGB565(unsigned char*, CTRPluginFramework::Color const&)
07029f10 00000048 T CTRPluginFramework::PrivColor::_WriteRGB5A1(unsigned char*, CTRPluginFramework::Color const&)
07029f58 00000044 T CTRPluginFramework::PrivColor::_WriteRGBA4(unsigned char*, CTRPluginFramework::Color const&)
07029f9c 00000144 T CTRPluginFramework::PrivColor::SetFormat(GSPGPU_FramebufferFormat)
0702a0e0 0000002c T CTRPluginFramework::PrivColor::UseClamp(bool)
0702a10c 00000040 t __tls_init
0702a10c 00000040 T TLS init function for CTRPluginFramework::PrivColor::_clampArea
0702a14c 0000004c T CTRPluginFramework::PrivColor::UseClamp(bool, CTRPluginFramework::Rect<int> const&)
0702a198 0000009c T CTRPluginFramework::PrivColor::_WriteRGBA8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0702a234 00000094 T CTRPluginFramework::PrivColor::_WriteBGR8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0702a2c8 000000b0 T CTRPluginFramework::PrivColor::_WriteRGB565Clamp(unsigned char*, CTRPluginFramework::Color const&)
0702a378 000000bc T CTRPluginFramework::PrivColor::_WriteRGB5A1Clamp(unsigned char*, CTRPluginFramework::Color const&)
0702a434 000000b8 T CTRPluginFramework::PrivColor::_WriteRGBA4Clamp(unsigned char*, CTRPluginFramework::Color const&)
0702a4ec 00000094 T CTRPluginFramework::ComboBox::Draw()
0702a580 00000054 W CTRPluginFramework::ComboBox::~ComboBox()
0702a580 00000054 W CTRPluginFramework::ComboBox::~ComboBox()
0702a5d4 00000020 W CTRPluginFramework::ComboBox::~ComboBox()
0702a5f4 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
0702a5f4 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
0702a640 0000003c T CTRPluginFramework::ComboBox::Clear()
0702a67c 00000080 T CTRPluginFramework::ComboBox::Update(bool, CTRPluginFramework::Vector<int> const&)
0702a6fc 000000a8 T CTRPluginFramework::ComboBox::operator()()
0702a7a4 00000050 T CTRPluginFramework::ComboBox::Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702a7f8 00000054 t CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask::{lambda(void*)#1}::_FUN(void*)
0702a84c 0000000c T CTRPluginFramework::OSDImpl::Lock()
0702a858 0000001c T CTRPluginFramework::OSDImpl::TryLock()
0702a874 0000000c T CTRPluginFramework::OSDImpl::Unlock()
0702a880 000000e8 T CTRPluginFramework::OSDImpl::PauseFrame()
0702a968 00000194 T CTRPluginFramework::OSDImpl::WaitFramePaused()
0702aafc 000000ac T CTRPluginFramework::OSDImpl::ResumeFrame(unsigned long)
0702aba8 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl4LockEv
0702abd8 000000dc t _GLOBAL__sub_D__ZN18CTRPluginFramework7OSDImpl4LockEv
0702acb4 000000c4 T CTRPluginFramework::MessageBoxImpl::_ProcessEvent(CTRPluginFramework::Event&)
0702ad78 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0702ad78 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0702aef0 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0702aef0 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0702b048 000002c0 T CTRPluginFramework::MessageBoxImpl::_Draw()
0702b308 000001f4 T CTRPluginFramework::MessageBoxImpl::operator()()
0702b4fc 00000028 t unsigned char* std::copy<unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*) [clone .isra.0]
0702b524 00000024 T CTRPluginFramework::BMPImage::BitmapFileHeader::Read(CTRPluginFramework::File&)
0702b548 00000024 T CTRPluginFramework::BMPImage::BitmapInformationHeader::Read(CTRPluginFramework::File&)
0702b56c 00000038 T CTRPluginFramework::BMPImage::~BMPImage()
0702b56c 00000038 T CTRPluginFramework::BMPImage::~BMPImage()
0702b5a4 00000008 T CTRPluginFramework::BMPImage::IsLoaded() const
0702b5ac 00000008 T CTRPluginFramework::BMPImage::Width() const
0702b5b4 00000008 T CTRPluginFramework::BMPImage::Height() const
0702b5bc 00000008 T CTRPluginFramework::BMPImage::GetDimensions() const
0702b5c4 00000010 T CTRPluginFramework::BMPImage::data() const
0702b5d4 0000001c T CTRPluginFramework::BMPImage::end() const
0702b5f0 00000014 W CTRPluginFramework::BMPImage::DataClear()
0702b604 0000008c T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
0702b604 0000008c T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
0702b690 00000034 T CTRPluginFramework::BMPImage::Unload()
0702b6c4 00000048 T CTRPluginFramework::BMPImage::ReverseChannels()
0702b70c 00000030 T CTRPluginFramework::BMPImage::RGBtoBGR()
0702b73c 000000d0 T CTRPluginFramework::BMPImage::FillWithImg(CTRPluginFramework::BMPImage const&)
0702b80c 0000006c T CTRPluginFramework::BMPImage::_CreateBitmap()
0702b878 00000024 T CTRPluginFramework::BMPImage::SetWidthHeight(unsigned long, unsigned long)
0702b89c 0000011c T CTRPluginFramework::BMPImage::Resample(CTRPluginFramework::BMPImage&, int, int)
0702b9b8 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
0702b9b8 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
0702ba0c 000001dc T CTRPluginFramework::BMPImage::SaveImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0702bbe8 0000012c T CTRPluginFramework::BMPImage::OptimiseForRendering()
0702bd14 000000d4 T CTRPluginFramework::BMPImage::Draw(int, int)
0702bde8 00000008 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Vector<int> const&)
0702bdf0 000000fc T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Rect<int> const&, float)
0702beec 00000318 T CTRPluginFramework::BMPImage::_LoadBitmap()
0702c204 000000b0 T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702c204 000000b0 T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702c2b4 0000004c T CTRPluginFramework::Renderer::SetTarget(CTRPluginFramework::Target)
0702c300 000002c8 T CTRPluginFramework::Renderer::MenuSelector(int, int, int, int)
0702c5c8 000000c4 T CTRPluginFramework::ProcessingLogo::Draw(int, int)
0702c68c 0000014c T CTRPluginFramework::Renderer::EndFrame(bool)
0702c7d8 0000015c T CTRPluginFramework::Button::Draw()
0702c934 00000070 T CTRPluginFramework::Button::operator()()
0702c9a4 00000184 T CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)
0702cb28 00000038 T CTRPluginFramework::Button::~Button()
0702cb28 00000038 T CTRPluginFramework::Button::~Button()
0702cb60 00000020 T CTRPluginFramework::Button::~Button()
0702cb80 00000194 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0702cb80 00000194 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0702cd14 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
0702cd14 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
0702cd34 00000098 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0702cd34 00000098 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0702cdcc 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
0702cdcc 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
0702cde0 00000018 T CTRPluginFramework::Button::Enable(bool)
0702cdf8 00000010 T CTRPluginFramework::Button::Enable()
0702ce08 00000010 T CTRPluginFramework::Button::Disable()
0702ce18 00000010 T CTRPluginFramework::Button::Lock()
0702ce28 00000010 T CTRPluginFramework::Button::Execute()
0702ce38 00000018 T CTRPluginFramework::Button::SetState(bool)
0702ce50 00000010 T CTRPluginFramework::Button::GetState() const
0702ce60 00000008 T CTRPluginFramework::Button::SetAcceptSoundEvent(CTRPluginFramework::SoundEngine::Event)
0702ce68 00000094 T CTRPluginFramework::OSDImpl::DrawNotif_TaskFunc(void*)
0702cefc 00000064 t CTRPluginFramework::GetBuffer(unsigned long)
0702cf60 000000ac t CTRPluginFramework::memsearch(unsigned char*, void const*, unsigned long, unsigned long) [clone .constprop.0]
0702d00c 00000030 t CTRPluginFramework::SearchStmfd(unsigned long, unsigned long, unsigned long) [clone .constprop.0]
0702d03c 00000010 t void std::__advance<__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >, int>(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >&, int, std::random_access_iterator_tag) [clone .isra.0]
0702d04c 0000016c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::OSDImpl::CallbackCommon(unsigned long, void*, void*, int, int, int)::{lambda(bool (*)(CTRPluginFramework::Screen const&))#1}>::operator()<__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > > >(__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >) [clone .isra.0]
0702d1b8 00000058 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::OSDImpl::Update()::{lambda(CTRPluginFramework::OSDImpl::OSDMessage*)#1}>::operator()<__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > > >(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >) [clone .isra.0]
0702d210 00000130 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0702d210 00000130 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0702d340 000000e0 T CTRPluginFramework::OSDImpl::UpdateScreens()
0702d420 000000d0 T CTRPluginFramework::InstallOSD()
0702d4f0 000000ac T CTRPluginFramework::OSDImpl::_Initialize()
0702d59c 00000028 W std::_Vector_base<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~_Vector_base()
0702d59c 00000028 W std::_Vector_base<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~_Vector_base()
0702d5c4 000000b4 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
0702d678 000001a4 T CTRPluginFramework::OSDImpl::Update()
0702d81c 00000058 T CTRPluginFramework::OSDImpl::OnTopScreenFrame()
0702d874 000000c8 T CTRPluginFramework::OSDImpl::OnBottomScreenFrame()
0702d93c 000005e0 T CTRPluginFramework::OSDImpl::CallbackCommon(unsigned long, void*, void*, int, int, int)
0702df1c 0000008c T CTRPluginFramework::OSDImpl::MainCallback(unsigned long, int, void*, void*, int, int, int)
0702dfa8 00000094 T CTRPluginFramework::OSDImpl::MainCallback2(unsigned long, unsigned long*, unsigned long, unsigned long)
0702e03c 00000070 t _GLOBAL__sub_D__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
0702e0ac 00000004 T CTRPluginFramework::TextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
0702e0b0 000002fc T CTRPluginFramework::TextBox::Draw()
0702e3ac 0000002c t std::_Vector_base<unsigned char*, std::allocator<unsigned char*> >::_M_allocate(unsigned int) [clone .isra.0]
0702e3d8 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0702e430 00000094 T CTRPluginFramework::TextBox::TextBox()
0702e430 00000094 T CTRPluginFramework::TextBox::TextBox()
0702e4c4 0000000c T CTRPluginFramework::TextBox::Open() const
0702e4d0 0000000c T CTRPluginFramework::TextBox::Close() const
0702e4dc 00000008 T CTRPluginFramework::TextBox::IsOpen() const
0702e4e8 00000228 T CTRPluginFramework::TextBox::ProcessEvent(CTRPluginFramework::Event&)
0702e710 0000000c T CTRPluginFramework::TextBox::DrawConst() const
0702e71c 00000094 T CTRPluginFramework::TextBox::_GetWordWidth(unsigned char*, float&)
0702e7b0 000000b4 T CTRPluginFramework::CutWordWidth(unsigned char*, float&, float)
0702e864 00000050 W std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_check_len(unsigned int, char const*) const
0702e8b4 000000a0 W std::vector<unsigned char*, std::allocator<unsigned char*> >::push_back(unsigned char* const&)
0702e954 0000023c T CTRPluginFramework::TextBox::_GetTextInfos()
0702eb90 00000184 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
0702eb90 00000184 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
0702ed14 00000160 T CTRPluginFramework::TextBox::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702ee74 0000012c T CTRPluginFramework::Renderer::FontCalcGlyphPos(fontGlyphPos_s*, charWidthInfo_s**, int, float, float)
0702efa0 0000011c T CTRPluginFramework::Renderer::GetTextSize(char const*)
0702f0bc 000001a4 T CTRPluginFramework::Renderer::GetTextInfos(char const*, int&, float&, float)
0702f260 000001c8 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color, unsigned long)
0702f428 00000064 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color, unsigned long)
0702f48c 00000238 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, float&, CTRPluginFramework::Color, unsigned long)
0702f6c4 000005a8 T CTRPluginFramework::Renderer::DrawSysStringReturn(unsigned char const*, int, int&, int, CTRPluginFramework::Color, int, unsigned long)
0702fc6c 00000484 T CTRPluginFramework::Renderer::DrawSysString(char const*, int, int&, int, CTRPluginFramework::Color, float, char const*, unsigned long)
070300f0 00000074 T CTRPluginFramework::Renderer::DrawSysCheckBox(char const*, int, int&, int, CTRPluginFramework::Color, bool, float)
07030164 00000070 T CTRPluginFramework::Renderer::DrawSysFolder(char const*, int, int&, int, CTRPluginFramework::Color, float)
070301d4 00000074 T CTRPluginFramework::TouchKeyString::TouchKeyString(CTRPluginFramework::Rect<int>, bool)
070301d4 00000074 T CTRPluginFramework::TouchKeyString::TouchKeyString(CTRPluginFramework::Rect<int>, bool)
07030248 00000008 T CTRPluginFramework::TouchKeyString::ForcePressed(bool)
07030250 00000034 T CTRPluginFramework::TouchKeyString::CanUse()
07030284 000000cc T CTRPluginFramework::TouchKeyString::Draw()
07030350 000000e8 T CTRPluginFramework::TouchKeyString::Update(bool, CTRPluginFramework::Vector<int> const&)
07030438 00000018 T CTRPluginFramework::TouchKeyString::Scroll(float)
07030450 00000014 T CTRPluginFramework::TouchKeyString::GetPosition(unsigned short&, float&)
07030464 00000018 T CTRPluginFramework::TouchKeyString::SetPosition(unsigned short, float)
0703047c 00000048 T CTRPluginFramework::TouchKeyString::operator()()
070304c4 00000008 T CTRPluginFramework::TouchKeyString::GetAcceptSoundEvent()
070304cc 000000ac T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
070304cc 000000ac T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07030578 0000007c T CTRPluginFramework::NumericTextBox::Draw()
070305f4 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
070305f4 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07030614 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07030634 00000098 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
070306cc 00000038 t CTRPluginFramework::NumericTextBox::_UpdateVal() [clone .part.0]
07030704 00000060 T CTRPluginFramework::NumericTextBox::_UpdateVal()
07030764 00000010 T CTRPluginFramework::NumericTextBox::SetValue(unsigned long)
07030774 00000008 T CTRPluginFramework::NumericTextBox::UseHexadecimal(bool)
0703077c 0000000c T CTRPluginFramework::NumericTextBox::Clear()
07030788 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
07030788 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
070307f0 000000f4 T CTRPluginFramework::NumericTextBox::operator()()
070308e4 00000010 T CTRPluginFramework::NumericTextBox::SetValue(float)
070308f4 00000074 T CTRPluginFramework::NumericTextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
07030968 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
070309c0 00000108 t RegBlock& std::vector<RegBlock, std::allocator<RegBlock> >::emplace_back<int&, int&>(int&, int&) [clone .isra.0]
07030ac8 00000038 T ARM_Disasm::DisassembleBKPT[abi:cxx11](unsigned long)
07030b00 000000a8 T ARM_Disasm::DisassemblePLD[abi:cxx11](unsigned long)
07030ba8 00000140 T ARM_Disasm::Decode01(unsigned long)
07030ce8 00000028 T ARM_Disasm::Decode10(unsigned long)
07030d10 00000078 T ARM_Disasm::Decode11(unsigned long)
07030d88 00000054 T ARM_Disasm::DecodeMUL(unsigned long)
07030ddc 00000050 T ARM_Disasm::DecodeLDRH(unsigned long)
07030e2c 00000110 T ARM_Disasm::DecodeALU(unsigned long)
07030f3c 000000c4 T ARM_Disasm::Decode00(unsigned long)
07031000 00000030 T ARM_Disasm::Decode(unsigned long)
07031030 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
070310b0 0000035c T ARM_Disasm::DisassembleALU[abi:cxx11](Opcode, unsigned long)
0703140c 00000078 T ARM_Disasm::DisassembleBranch[abi:cxx11](unsigned long, Opcode, unsigned long)
07031484 00000070 T ARM_Disasm::DisassembleBX[abi:cxx11](unsigned long)
070314f4 00000080 T ARM_Disasm::DisassembleCLZ[abi:cxx11](unsigned long)
07031574 00000448 T ARM_Disasm::DisassembleMem[abi:cxx11](unsigned long)
070319bc 00000220 T ARM_Disasm::DisassembleMemHalf[abi:cxx11](unsigned long)
07031bdc 000000a4 T ARM_Disasm::DisassembleMCR[abi:cxx11](Opcode, unsigned long)
07031c80 000000c0 T ARM_Disasm::DisassembleMLA[abi:cxx11](Opcode, unsigned long)
07031d40 000000c0 T ARM_Disasm::DisassembleUMLAL[abi:cxx11](Opcode, unsigned long)
07031e00 000000b0 T ARM_Disasm::DisassembleMUL[abi:cxx11](Opcode, unsigned long)
07031eb0 00000090 T ARM_Disasm::DisassembleMRS[abi:cxx11](unsigned long)
07031f40 00000178 T ARM_Disasm::DisassembleMSR[abi:cxx11](unsigned long)
070320b8 00000114 T ARM_Disasm::DisassemblePackUnpack[abi:cxx11](Opcode, unsigned long)
070321cc 00000064 T ARM_Disasm::DisassembleSWI[abi:cxx11](unsigned long)
07032230 00000094 T ARM_Disasm::DisassembleSWP[abi:cxx11](Opcode, unsigned long)
070322c4 00000354 T ARM_Disasm::DisassembleMemblock[abi:cxx11](Opcode, unsigned long)
07032618 000002fc T ARM_Disasm::Disassemble[abi:cxx11](unsigned long, unsigned long)
07032914 00000074 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int) [clone .isra.0]
07032988 0000014c t CTRPluginFramework::RemoveFormat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07032ad4 00000360 T CTRPluginFramework::ActionReplay_WriteToFile(CTRPluginFramework::LineWriter&, CTRPluginFramework::MenuItem*)
07032e34 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07032e8c 00000090 T CTRPluginFramework::ActionReplayPriv::Str2U32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
07032f1c 0000003c T CTRPluginFramework::ARCode::IsCodeWithData() const
07032f58 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
07032f58 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
07032f7c 00000028 T CTRPluginFramework::ARCode::ToString[abi:cxx11]() const
07032fa4 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
07032fa4 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
07032fd8 000000b0 T CTRPluginFramework::ARCodeContext::Clear()
07033088 00000110 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
07033088 00000110 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
07033198 00000124 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
07033198 00000124 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
070332bc 000000f0 T CTRPluginFramework::ARCode::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070333ac 00000084 T CTRPluginFramework::ARCode::Update()
07033430 0000003c T CTRPluginFramework::ARCodeContext::Update()
0703346c 000000c0 t _GLOBAL__sub_I__ZN18CTRPluginFramework11g_codeTypesE
0703352c 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework11g_codeTypesE
0703354c 00000020 t __tcf_1
0703356c 00000018 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >) [clone .isra.0]
07033584 00000028 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check(unsigned int, char const*) const [clone .isra.0]
070335ac 00000018 T CTRPluginFramework::ActionReplay_OpenCheatsFile(CTRPluginFramework::File&, bool)
070335c4 00000050 T CTRPluginFramework::ActionReplay_CheckCodeTypeValidity(unsigned long)
07033614 00000050 T CTRPluginFramework::ActionReplay_IsHexCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07033664 00000048 T CTRPluginFramework::ActionReplay_IsValidCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070336ac 00000050 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
070336ac 00000050 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
070336fc 00000020 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::back()
0703371c 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
070337c8 00000040 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::size() const
07033808 00000128 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode const&)
07033930 00000068 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(unsigned int, unsigned int)
07033998 000000f0 t CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07033a88 00000104 t CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [clone .isra.0]
07033b8c 00000010 t CTRPluginFramework::Trim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [clone .isra.0]
07033b9c 00000118 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
07033cb4 00000038 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*) [clone .isra.0]
07033cec 000004b8 T CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
070341a4 00000154 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::_M_reserve_map_at_back(unsigned int)
070342f8 0000074c T CTRPluginFramework::ActionReplay_LoadCodes(CTRPluginFramework::MenuFolderImpl*)
07034a44 00000050 t CTRPluginFramework::ActionReplay_ExecuteCode(CTRPluginFramework::MenuEntryImpl*)
07034a94 00000078 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
07034a94 00000078 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
07034b0c 00000020 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
07034b2c 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07034b2c 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07034b78 00000068 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
07034be0 00000098 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07034c78 00000130 T CTRPluginFramework::MenuEntryActionReplay::Update()
07034da8 000000b0 t CTRPluginFramework::GetCond32Str(unsigned long, unsigned long, char const*)
07034e58 00000140 t CTRPluginFramework::GetCond16Str(unsigned long, unsigned long, char const*)
07034f98 00000040 t std::_Vector_base<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_allocate(unsigned int) [clone .isra.0]
07034fd8 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07035030 00000028 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check(unsigned int, char const*) const [clone .isra.0]
07035058 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
07035058 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
07035058 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
07035058 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
070350a4 00000044 W bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070350e8 00000020 W CTRPluginFramework::ARCodeEditor::CodeLine::~CodeLine()
070350e8 00000020 W CTRPluginFramework::ARCodeEditor::CodeLine::~CodeLine()
07035108 00000034 W std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::clear()
0703513c 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0703519c 00000040 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
070351dc 00000144 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
070351dc 00000144 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
07035320 000002b8 T CTRPluginFramework::ARCodeEditor::_RenderTop()
070355d8 0000005c t CTRPluginFramework::ColorToString(CTRPluginFramework::Color const&)
07035634 00000050 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*) [clone .isra.0]
07035684 00000068 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
070356ec 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07035798 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
07035798 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
07035810 0000003c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703584c 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
07035880 00001454 T CTRPluginFramework::ARCodeEditor::CodeLine::Update()
07036cd4 0000008c T CTRPluginFramework::ARCodeEditor::_Update()
07036d60 00000060 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_check_len(unsigned int, char const*) const
07036dc0 00000024 W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode*)
07036de4 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::clear()
07036e0c 0000003c t CTRPluginFramework::ARCode& std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&) [clone .isra.0]
07036e48 00000030 t __tcf_1
07036e78 0000012c W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::_M_realloc_insert<CTRPluginFramework::ARCodeEditor::CodeLine>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCodeEditor::CodeLine*, std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> > >, CTRPluginFramework::ARCodeEditor::CodeLine&&)
07036fa4 0000003c t CTRPluginFramework::ARCodeEditor::CodeLine& std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::emplace_back<CTRPluginFramework::ARCodeEditor::CodeLine>(CTRPluginFramework::ARCodeEditor::CodeLine&&) [clone .isra.0]
07036fe0 000002f4 T CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()
070372d4 00000688 T CTRPluginFramework::ARCodeEditor::CodeLine::Edit(unsigned long, unsigned long)
0703795c 000001a8 t CTRPluginFramework::ARCode::operator=(CTRPluginFramework::ARCode const&) [clone .isra.0]
07037b04 000000b8 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_insert_rval(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode const*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
07037bc0 00000474 T CTRPluginFramework::ARCodeEditor::_ProcessEvent(CTRPluginFramework::Event&)
07038034 000003cc T CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
07038400 000001f4 T CTRPluginFramework::ARCodeEditor::Edit(CTRPluginFramework::ARCodeContext&)
070385f4 0000002c T CTRPluginFramework::GetRatio(int, int, int, int)
07038620 00000108 T CTRPluginFramework::PostProcess(CTRPluginFramework::BMPImage*, int, int)
07038728 000000f4 T CTRPluginFramework::Preferences::LoadBackgrounds()
0703881c 00000060 T CTRPluginFramework::Preferences::ApplyBacklight()
0703887c 00000004 T CTRPluginFramework::Preferences::Initialize()
07038880 00000214 T CTRPluginFramework::Preferences::OpenConfigFile(CTRPluginFramework::File&, CTRPluginFramework::Preferences::HeaderV11&)
07038a94 000000bc T CTRPluginFramework::Preferences::LoadSettings()
07038b50 0000005c T CTRPluginFramework::Preferences::LoadHotkeysFromFile()
07038bac 000000bc T CTRPluginFramework::Preferences::LoadSavedEnabledCheats()
07038c68 000000bc T CTRPluginFramework::Preferences::LoadSavedFavorites()
07038d24 00000158 T CTRPluginFramework::Preferences::WriteSettings()
07038e7c 0000020c t CTRPluginFramework::Preferences::LoadBackgrounds()::{lambda(void*)#1}::_FUN(void*)
07039088 000000a8 t _GLOBAL__sub_I__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
07039130 0000002c t _GLOBAL__sub_D__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
0703915c 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
0703915c 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07039188 00000018 T CTRPluginFramework::LineReader::~LineReader()
07039188 00000018 T CTRPluginFramework::LineReader::~LineReader()
070391a0 000000fc T CTRPluginFramework::LineReader::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0703929c 00000024 t __tcf_0
070392c0 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
070392c0 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
070392e8 0000004c T CTRPluginFramework::LineWriter::endl[abi:cxx11]()
07039334 00000048 T CTRPluginFramework::LineWriter::Flush()
0703937c 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
0703937c 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
07039398 00000064 T CTRPluginFramework::LineWriter::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070393fc 00000018 T CTRPluginFramework::LineWriter::Close()
07039414 0000000c T CTRPluginFramework::HookContext::GetCurrent()
07039420 00000028 T CTRPluginFramework::HookContext::GetCallCode()
07039448 00000048 T CTRPluginFramework::Hook::Hook()
07039448 00000048 T CTRPluginFramework::Hook::Hook()
07039490 00000028 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook const&)
07039490 00000028 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook const&)
070394b8 00000014 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook&&)
070394b8 00000014 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook&&)
070394cc 00000064 T CTRPluginFramework::Hook::operator=(CTRPluginFramework::Hook&&)
07039530 00000050 T CTRPluginFramework::Hook::~Hook()
07039530 00000050 T CTRPluginFramework::Hook::~Hook()
07039580 0000001c T CTRPluginFramework::Hook::Initialize(unsigned long, unsigned long)
0703959c 00000028 T CTRPluginFramework::Hook::InitializeForMitm(unsigned long, unsigned long)
070395c4 00000010 T CTRPluginFramework::Hook::SetFlags(unsigned long)
070395d4 0000001c T CTRPluginFramework::Hook::IsEnabled()
070395f0 00000120 T CTRPluginFramework::Hook::Enable()
07039710 00000030 T CTRPluginFramework::Hook::Disable()
07039740 00000008 T CTRPluginFramework::Hook::GetContext() const
07039748 00000010 T CTRPluginFramework::System::IsNew3DS()
07039758 00000010 T CTRPluginFramework::System::Reboot()
07039768 00000028 T CTRPluginFramework::Touch::IsDown()
07039790 00000028 T CTRPluginFramework::Touch::GetPosition()
070397b8 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
070397b8 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
070397bc 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
070397c0 00000030 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
070397f0 00000018 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
07039808 00000008 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
07039810 00000034 t std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)2>&&) [clone .isra.0]
07039844 000000ac T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
07039844 000000ac T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
070398f0 00000048 T CTRPluginFramework::Task::Start() const
07039938 0000004c T CTRPluginFramework::Task::Start(void*) const
07039984 00000064 T CTRPluginFramework::Task::Wait() const
070399e8 00000030 t std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, ThreadVars*> >*) [clone .isra.0]
07039a18 00000090 t std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_get_insert_unique_pos(unsigned long const&) [clone .isra.0]
07039aa8 00000034 T CTRPluginFramework::ThreadEx::ThreadEx(void (*)(void*), unsigned long, unsigned long, int)
07039aa8 00000034 T CTRPluginFramework::ThreadEx::ThreadEx(void (*)(void*), unsigned long, unsigned long, int)
07039adc 00000020 T CTRPluginFramework::ThreadEx::~ThreadEx()
07039adc 00000020 T CTRPluginFramework::ThreadEx::~ThreadEx()
07039afc 00000054 T CTRPluginFramework::ThreadEx::Start(void*)
07039b50 00000048 T CTRPluginFramework::ThreadEx::Join(bool)
07039b98 00000008 T CTRPluginFramework::ThreadEx::GetStatus()
07039ba0 00000170 W std::_Rb_tree_iterator<std::pair<unsigned long const, ThreadVars*> > std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_emplace_hint_unique<std::pair<unsigned long, ThreadVars*> >(std::_Rb_tree_const_iterator<std::pair<unsigned long const, ThreadVars*> >, std::pair<unsigned long, ThreadVars*>&&)
07039d10 00000218 T __ctrpf_getThreadVars
07039f28 00000038 t _GLOBAL__sub_I___ctrpf_getThreadVars
07039f60 00000038 t _GLOBAL__sub_D___ctrpf_getThreadVars
07039f98 0000003c T CTRPluginFramework::Controller::Update()
07039fd4 00000004 T CTRPluginFramework::SoundEngine::PlayMenuSound(CTRPluginFramework::SoundEngine::Event)
07039fd8 0000000c T CTRPluginFramework::Sound::Sound()
07039fd8 0000000c T CTRPluginFramework::Sound::Sound()
07039fe4 00000014 T CTRPluginFramework::Sound::Sound(CTRPluginFramework::Sound&&)
07039fe4 00000014 T CTRPluginFramework::Sound::Sound(CTRPluginFramework::Sound&&)
07039ff8 00000034 T CTRPluginFramework::Sound::Sound(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07039ff8 00000034 T CTRPluginFramework::Sound::Sound(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0703a02c 00000090 T CTRPluginFramework::Sound::operator=(CTRPluginFramework::Sound const&)
0703a0bc 00000070 T CTRPluginFramework::Sound::operator=(CTRPluginFramework::Sound&&)
0703a12c 00000058 T CTRPluginFramework::Sound::~Sound()
0703a12c 00000058 T CTRPluginFramework::Sound::~Sound()
0703a184 00000018 T CTRPluginFramework::Sound::GetLoadStatus()
0703a19c 00000040 T CTRPluginFramework::Sound::Play(int, int)
0703a1dc 00000008 T CTRPluginFramework::Sound::Play(int)
0703a1e4 00000008 T CTRPluginFramework::Sound::Play()
0703a1ec 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
0703a1ec 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
0703a214 00000010 T CTRPluginFramework::CustomIcon::CustomIcon(CTRPluginFramework::CustomIcon::Pixel*, int, int, bool)
0703a214 00000010 T CTRPluginFramework::CustomIcon::CustomIcon(CTRPluginFramework::CustomIcon::Pixel*, int, int, bool)
0703a224 0000001c T CTRPluginFramework::CustomIcon::CustomIcon()
0703a224 0000001c T CTRPluginFramework::CustomIcon::CustomIcon()
0703a240 000000e8 W void std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::_M_realloc_insert<CTRPluginFramework::OSDImpl::OSDMessage*>(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >, CTRPluginFramework::OSDImpl::OSDMessage*&&)
0703a328 00000088 T CTRPluginFramework::OSD::Notify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0703a3b0 00000384 t cwav_initialize
0703a734 000000f4 t cwav_stopImpl.part.0
0703a828 00000004 T cwavUseEnvironment
0703a82c 00000034 T cwavSetVAToPACallback
0703a860 00000050 T cwavLoad
0703a8b0 000004d8 T cwavPlay
0703ad88 00000064 T cwavStop
0703adec 00000170 T cwavFree
0703af5c 00000004 T cwav_defaultVAToPA
0703af60 00000004 T cwavEnvUseEnvironment
0703af64 00000008 T cwavEnvGetEnvironment
0703af6c 00000004 T cwavEnvInitialize
0703af70 00000004 T cwavEnvFinalize
0703af74 00000014 T cwavEnvCompatibleEncoding
0703af88 00000008 T cwavEnvGetChannelAmount
0703af90 00000018 T cwavEnvIsChannelAvailable
0703afa8 000000f4 T cwavEnvPlay
0703b09c 00000004 T cwavEnvChannelIsPlaying
0703b0a0 00000004 T cwavEnvStop
0703b0a4 0000003c T fontEnsureMappedExtension
0703b0e0 0000002c W MemBlock::Create(unsigned char*, unsigned long)
0703b10c 00000034 W MemPool::DelBlock(MemBlock*)
0703b140 0000005c T MemPool::CoalesceRight(MemBlock*)
0703b19c 000000fc T MemPool::Allocate(MemChunk&, unsigned long, int)
0703b298 00000100 T MemPool::Deallocate(MemChunk const&)
0703b398 00000020 T MemPool::GetFreeSpace()
0703b3b8 000000c4 T CTRPluginFramework::SoundImpl::SoundImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0703b3b8 000000c4 T CTRPluginFramework::SoundImpl::SoundImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0703b47c 00000008 T CTRPluginFramework::SoundImpl::GetLoadStatus()
0703b484 00000018 T CTRPluginFramework::SoundImpl::Play(int, int)
0703b49c 00000028 T CTRPluginFramework::SoundImpl::~SoundImpl()
0703b49c 00000028 T CTRPluginFramework::SoundImpl::~SoundImpl()
0703b4c4 000000d0 T CTRPluginFramework::Search32::FirstSearchUnknown()
0703b594 000000c4 T CTRPluginFramework::Search32::FirstSearchSpecified()
0703b658 00000064 W CTRPluginFramework::Search::~Search()
0703b658 00000064 W CTRPluginFramework::Search::~Search()
0703b6bc 00000044 T CTRPluginFramework::Search32::~Search32()
0703b6bc 00000044 T CTRPluginFramework::Search32::~Search32()
0703b700 00000020 T CTRPluginFramework::Search32::~Search32()
0703b720 00000024 W CTRPluginFramework::Search::~Search()
0703b744 00000204 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
0703b744 00000204 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
0703b948 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703b948 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703b968 00000094 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
0703b968 00000094 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
0703b9fc 0000010c W std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
0703bb08 000001b4 T CTRPluginFramework::Search32::SecondSearchSpecified()
0703bcbc 00000100 W std::vector<unsigned long, IAllocator<unsigned long> >::_M_default_append(unsigned int)
0703bdbc 0000019c T CTRPluginFramework::Search32::SecondSearchUnknown()
0703bf58 00000138 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
0703c090 0000004c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
0703c0dc 00000144 T CTRPluginFramework::Search32::SubsidiarySearchSpecified()
0703c220 00000144 T CTRPluginFramework::Search32::SubsidiarySearchUnknown()
0703c364 0000003c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >& std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0703c3a0 00000068 W CTRPluginFramework::Results32* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32*, unsigned int>(CTRPluginFramework::Results32*, unsigned int)
0703c408 000000d8 W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
0703c4e0 0000003c W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::resize(unsigned int)
0703c51c 00000080 W CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32WithOld*, unsigned int>(CTRPluginFramework::Results32WithOld*, unsigned int)
0703c59c 000000f8 W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
0703c694 0000004c W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
0703c6e0 0000032c T CTRPluginFramework::Search32::ReadResults(unsigned long, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
0703ca0c 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU8(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0703cc9c 000002a8 T CTRPluginFramework::Search32::FirstSearchSpecifiedU16(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0703cf44 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU32(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0703d1d4 00000034 T CTRPluginFramework::AlmostEqualRelative(float, float, float)
0703d208 0000031c T CTRPluginFramework::Search32::FirstSearchSpecifiedFloat(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0703d524 00000044 T CTRPluginFramework::Search::UpdateProgress()
0703d568 00000048 T CTRPluginFramework::Search::Cancel()
0703d5b0 00000184 T CTRPluginFramework::Search::CheckNextRegion()
0703d734 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0703d78c 0000015c W std::__cxx11::to_string(unsigned long)
0703d8e8 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0703d968 00000008 T CTRPluginFramework::Search::GetHeader() const
0703d970 00000048 T CTRPluginFramework::Search::GetTotalResults(CTRPluginFramework::Header const&) const
0703d9b8 0000000c T CTRPluginFramework::Search::GetType() const
0703d9c4 00000018 T CTRPluginFramework::Search::IsFirstUnknownSearch() const
0703d9dc 00000070 T CTRPluginFramework::Search::WriteHeader()
0703da4c 00000058 T CTRPluginFramework::Search::WriteResults()
0703daa4 00000048 T CTRPluginFramework::Search::GetRegionIndex(unsigned long)
0703daec 000000ec W void std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> >::_M_realloc_insert<CTRPluginFramework::Search::RegionIndex const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Search::RegionIndex*, std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> > >, CTRPluginFramework::Search::RegionIndex const&)
0703dbd8 00000084 T CTRPluginFramework::Search::CreateIndexTable()
0703dc5c 0000013c T CTRPluginFramework::Search::ExecuteSearch()
0703dd98 000001f0 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703dd98 000001f0 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703df88 00000250 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0703df88 00000250 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0703e1d8 0000022c T CTRPluginFramework::Search::ExtractPreviousHits(void*, unsigned long, unsigned long, unsigned long&, bool)
0703e404 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0703e45c 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
0703e45c 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
0703e4a8 000000b0 T CTRPluginFramework::GatewayRAMDumper::_WriteHeader()
0703e558 00000098 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
0703e5f0 000000f0 W __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)
0703e6e0 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0703e760 00000360 T CTRPluginFramework::GatewayRAMDumper::_SelectRegion()
0703eac0 0000013c T CTRPluginFramework::GatewayRAMDumper::_DrawProgress()
0703ebfc 00000028 t CTRPluginFramework::GatewayRAMDumper::operator()()::{lambda(void*)#1}::_FUN(void*)
0703ec24 000000b4 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int) [clone .isra.0]
0703ecd8 00000030 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
0703ed08 00000050 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*) [clone .isra.0]
0703ed58 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703edc4 00000280 T CTRPluginFramework::GatewayRAMDumper::_OpenFile()
0703f044 0000032c T CTRPluginFramework::GatewayRAMDumper::operator()()
0703f370 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0703f3c8 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
0703f408 000000b4 T CTRPluginFramework::SearchMenu::_NewCheat()
0703f4bc 00000058 T CTRPluginFramework::SearchMenu::_JumpInEditor()
0703f514 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0703f594 00000094 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector<char const* const*, void>(char const* const*, char const* const*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
0703f594 00000094 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector<char const* const*, void>(char const* const*, char const* const*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
0703f628 000000a0 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
0703f628 000000a0 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
0703f6c8 00000198 T CTRPluginFramework::SearchMenu::Update()
0703f860 0000018c T CTRPluginFramework::SearchMenu::_Edit()
0703f9ec 0000007c T CTRPluginFramework::SearchMenu::_OpenExportFile()
0703fa68 0000015c T CTRPluginFramework::SearchMenu::_ExportAll()
0703fbc4 0000014c T CTRPluginFramework::SearchMenu::_Export()
0703fd10 000005b8 T CTRPluginFramework::SearchMenu::Draw()
070402c8 0000011c T CTRPluginFramework::SearchMenu::_ShowGame()
070403e8 00000518 T CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07040900 000000e4 T CTRPluginFramework::Converter::Converter()
07040900 000000e4 T CTRPluginFramework::Converter::Converter()
070409e4 00000010 T CTRPluginFramework::Converter::Instance()
070409f4 00000110 T CTRPluginFramework::Converter::_Draw()
07040b04 00000228 T CTRPluginFramework::Converter::operator()(unsigned long)
07040d2c 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
07040d2c 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
07040d30 00000014 T CTRPluginFramework::FloatingButton::Draw()
07040d44 00000014 T CTRPluginFramework::FloatingButton::operator()()
07040d58 00000018 T CTRPluginFramework::FloatingButton::~FloatingButton()
07040d70 00000198 T CTRPluginFramework::FloatingButton::Update(bool, CTRPluginFramework::Vector<int> const&)
07040f08 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07040f08 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07040f48 00000024 T CTRPluginFramework::Write32(unsigned long, unsigned long)
07040f6c 00000024 T CTRPluginFramework::Write16(unsigned long, unsigned short)
07040f90 00000024 T CTRPluginFramework::Write8(unsigned long, unsigned char)
07040fb4 00000028 T CTRPluginFramework::Read32(unsigned long, unsigned long&)
07040fdc 00000028 T CTRPluginFramework::Read16(unsigned long, unsigned short&)
07041004 00000028 T CTRPluginFramework::Read8(unsigned long, unsigned char&)
0704102c 00000100 W void std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> >::_M_realloc_insert<CTRPluginFramework::Hook const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Hook*, std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> > >, CTRPluginFramework::Hook const&)
0704112c 00001a50 T CTRPluginFramework::ARHandler::_Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
07042b7c 000000b0 T CTRPluginFramework::ARHandler::Execute(CTRPluginFramework::ARCodeContext&)
07042c2c 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9ARHandler6OffsetE
07042c4c 00000484 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070430d0 00000488 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07043558 0000047c T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070439d4 00000628 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07043ffc 00000920 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704491c 00000910 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704522c 000008e8 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07045b14 00000c54 T CTRPluginFramework::Search32::SubsidiarySearchUnknownFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07046768 000008a4 T CTRPluginFramework::Search32::SecondSearchSpecifiedU8(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704700c 00000928 T CTRPluginFramework::Search32::SecondSearchSpecifiedU16(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07047934 00000924 T CTRPluginFramework::Search32::SecondSearchSpecifiedU32(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07048258 00000de4 T CTRPluginFramework::Search32::SecondSearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704903c 00000c88 T CTRPluginFramework::Search32::SecondSearchUnknownU8(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07049cc4 0000075c T CTRPluginFramework::Search32::SecondSearchUnknownU16(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704a420 00000408 T CTRPluginFramework::Search32::SecondSearchUnknownU32(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704a828 000006d4 T CTRPluginFramework::Search32::SecondSearchUnknownFloat(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704aefc 00000084 W envGetHandle
0704af80 00000050 W envDestroyHandles
0704afd0 00000094 T fontEnsureMapped
0704b064 00000100 T fontGlyphIndexFromCodePoint
0704b164 00000070 T fontGetCharWidthInfo
0704b1d4 00000074 T osConvertVirtToPhys
0704b248 00000054 T osGetTimeRef
0704b29c 000000ec T osGetTime
0704b388 0000012c T srvInit
0704b4b4 00000058 T srvExit
0704b50c 000000a0 T srvGetServiceHandleDirect
0704b5ac 00000038 T srvGetServiceHandle
0704b5e4 00000038 T srvPublishToSubscriber
0704b61c 0000000c T __sync_init
0704b628 00000018 T __sync_fini
0704b640 0000002c T syncArbitrateAddressWithTimeout
0704b66c 0000001c T LightLock_Init
0704b688 000000ac T LightLock_Lock
0704b734 00000040 T LightLock_Unlock
0704b774 00000024 T RecursiveLock_Init
0704b798 00000030 T RecursiveLock_Lock
0704b7c8 00000078 T RecursiveLock_TryLock
0704b840 00000054 T RecursiveLock_Unlock
0704b894 00000040 T LightEvent_Init
0704b8d4 000000a4 T LightEvent_Clear
0704b978 00000048 T LightEvent_Pulse
0704b9c0 000000c8 T LightEvent_Signal
0704ba88 000000a0 T LightEvent_Wait
0704bb28 00000014 T LightSemaphore_Init
0704bb3c 00000094 T LightSemaphore_Acquire
0704bbd0 00000064 T LightSemaphore_Release
0704bc34 000000b4 t mappableFindAddressWithin
0704bce8 00000028 T mappableInit
0704bd10 00000080 T mappableAlloc
0704bd90 00000004 T mappableFree
0704bd94 0000008c T acInit
0704be20 0000003c T acExit
0704be5c 000000a4 T amInit
0704bf00 0000003c T amExit
0704bf3c 00000158 T aptSendCommand
0704c094 00000030 T aptHook
0704c0c4 00000030 T aptUnhook
0704c0f4 00000028 T APT_PrepareToCloseApplication
0704c11c 00000048 T APT_CloseApplication
0704c164 0000007c T APT_CheckNew3DS
0704c1e0 00000048 T APT_GetSharedFont
0704c228 000000a4 T cfguInit
0704c2cc 0000003c T cfguExit
0704c308 00000054 T CFGU_GetSystemLanguage
0704c35c 000000a4 T frdInit
0704c400 0000003c T frdExit
0704c43c 00000040 T FRD_PrincipalIdToFriendCode
0704c47c 00000054 T FRD_IsValidFriendCode
0704c4d0 000000cc T fsInit
0704c59c 0000003c T fsExit
0704c5d8 000000cc T FSUSER_OpenFile
0704c6a4 000000bc T FSUSER_DeleteFile
0704c760 000000f8 T FSUSER_RenameFile
0704c858 000000bc T FSUSER_DeleteDirectoryRecursively
0704c914 000000d4 T FSUSER_CreateFile
0704c9e8 000000c4 T FSUSER_CreateDirectory
0704caac 000000f8 T FSUSER_RenameDirectory
0704cba4 000000b4 T FSUSER_OpenDirectory
0704cc58 00000094 T FSUSER_OpenArchive
0704ccec 00000058 T FSFILE_Read
0704cd44 00000060 T FSFILE_Write
0704cda4 00000038 T FSFILE_GetSize
0704cddc 00000028 T FSFILE_SetSize
0704ce04 0000003c T FSFILE_Close
0704ce40 00000024 T FSFILE_Flush
0704ce64 00000028 T FSFILE_SetPriority
0704ce8c 00000050 T FSDIR_Read
0704cedc 0000003c T FSDIR_Close
0704cf18 000000f0 T gspExit
0704d008 00000024 W hidShouldUseIrrst
0704d02c 0000018c T hidInit
0704d1b8 000000e8 T hidExit
0704d2a0 000002a4 T hidScanInput
0704d544 00000010 T hidKeysHeld
0704d554 00000010 T hidKeysDown
0704d564 00000010 T hidKeysUp
0704d574 00000018 T hidTouchRead
0704d58c 00000160 T irrstInit
0704d6ec 000000cc T irrstExit
0704d7b8 000000b4 T irrstScanInput
0704d86c 00000024 T irrstKeysHeld
0704d890 0000000c T srvPmGetSessionHandle
0704d89c 000000b4 T sslcInit
0704d950 00000048 T sslcExit
0704d998 00000048 T sslcGenerateRandomData
0704d9e0 00000074 T rbtree_find
0704da54 00000010 T rbtree_init
0704da64 000001b0 t do_insert
0704dc14 00000008 T rbtree_insert
0704dc1c 00000318 T rbtree_remove
0704df34 00000090 T rbtree_rotate
0704dfc4 00000064 T decode_utf16
0704e028 0000013c T decode_utf8
0704e164 00000054 T encode_utf16
0704e1b8 000000e0 T encode_utf8
0704e298 000000c0 T utf8_to_utf16
0704e358 T svcQueryMemory
0704e388 T svcExitProcess
0704e390 T svcCreateThread
0704e3b0 T svcExitThread
0704e3b8 T svcSleepThread
0704e3c0 T svcSetThreadPriority
0704e3c8 T svcReleaseMutex
0704e3d0 T svcCreateEvent
0704e3e4 T svcSignalEvent
0704e3ec T svcClearEvent
0704e3f4 T svcMapMemoryBlock
0704e3fc T svcUnmapMemoryBlock
0704e404 T svcCreateAddressArbiter
0704e418 T svcArbitrateAddress
0704e430 T svcArbitrateAddressNoTimeout
0704e438 T svcCloseHandle
0704e440 T svcWaitSynchronization
0704e448 T svcWaitSynchronizationN
0704e470 T svcDuplicateHandle
0704e484 T svcGetSystemTick
0704e48c T svcGetSystemInfo
0704e4a4 T svcGetProcessInfo
0704e4bc T svcConnectToPort
0704e4d0 T svcSendSyncRequest
0704e4d8 T svcOpenProcess
0704e4ec T svcGetProcessId
0704e500 T svcGetThreadId
0704e514 T svcBreak
0704e51c T svcInvalidateProcessDataCache
0704e524 T svcFlushProcessDataCache
0704e52c T svcKernelSetState
0704e534 T svcQueryProcessMemory
0704e558 0000005c T rbtree_node_next
0704e5b4 00000004 T operator delete(void*)
0704e5b8 00000004 T operator delete(void*, std::nothrow_t const&)
0704e5bc 00000004 T operator delete(void*, unsigned int)
0704e5c0 00000004 T operator delete[](void*)
0704e5c4 0000000c W __gnu_cxx::__concurrence_lock_error::what() const
0704e5d0 0000000c W __gnu_cxx::__concurrence_unlock_error::what() const
0704e5dc 0000000c W __gnu_cxx::__concurrence_broadcast_error::what() const
0704e5e8 0000000c W __gnu_cxx::__concurrence_wait_error::what() const
0704e5f8 00000038 t (anonymous namespace)::init()
0704e630 00000024 t (anonymous namespace)::init_static_cond()
0704e654 00000020 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0704e654 00000020 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0704e674 0000002c W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0704e6a0 00000020 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
0704e6a0 00000020 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
0704e6c0 0000002c W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
0704e6ec 00000020 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0704e6ec 00000020 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0704e70c 0000002c W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0704e738 00000020 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
0704e738 00000020 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
0704e758 0000002c W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
0704e784 0000002c W __gnu_cxx::__throw_concurrence_lock_error()
0704e7b0 0000002c W __gnu_cxx::__throw_concurrence_unlock_error()
0704e7dc 0000002c W __gnu_cxx::__throw_concurrence_broadcast_error()
0704e808 000001a4 T __cxa_guard_acquire
0704e9ac 000000b0 T __cxa_guard_release
0704ea5c 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
0704ea5c 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
0704ea7c 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
0704eaa8 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
0704eaa8 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
0704eab8 00000014 T std::get_new_handler()
0704eacc 0000005c T operator new(unsigned int)
0704eb28 0000001c T operator new(unsigned int, std::nothrow_t const&)
0704eb44 00000004 T operator new[](unsigned int)
0704eb48 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0704eb48 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0704eb68 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0704eb94 00000138 T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0704eccc 00000088 T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0704ed54 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0704ed98 00000004 T std::type_info::~type_info()
0704ed98 00000004 T std::type_info::~type_info()
0704ed9c 00000008 T std::type_info::__is_pointer_p() const
0704ed9c 00000008 T std::type_info::__is_function_p() const
0704eda4 00000014 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
0704edb8 00000014 T std::__detail::_List_node_base::_M_unhook()
0704edcc 00000058 T std::_Rb_tree_increment(std::_Rb_tree_node_base*)
0704ee24 00000070 T std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
0704ee94 00000284 T std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
0704f118 0000002c T std::__throw_bad_alloc()
0704f144 0000002c T std::__throw_bad_array_new_length()
0704f170 00000040 T std::__throw_logic_error(char const*)
0704f1b0 00000040 T std::__throw_invalid_argument(char const*)
0704f1f0 00000040 T std::__throw_length_error(char const*)
0704f230 00000040 T std::__throw_out_of_range(char const*)
0704f270 00000010 T std::__throw_out_of_range_fmt(char const*, ...)
0704f280 000000e4 T std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned int) const
0704f368 000000e0 T std::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned int, unsigned int, unsigned int) const
0704f448 00000044 T std::_Sp_make_shared_tag::_S_eq(std::type_info const&)
0704f48c 00000140 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_cold(char*, unsigned int, char const*, unsigned int, unsigned int)
0704f5cc 0000000c T std::bad_alloc::what() const
0704f5d8 00000020 T std::bad_alloc::~bad_alloc()
0704f5d8 00000020 T std::bad_alloc::~bad_alloc()
0704f5f8 0000002c T std::bad_alloc::~bad_alloc()
0704f624 0000000c T std::bad_array_new_length::what() const
0704f630 00000020 T std::bad_array_new_length::~bad_array_new_length()
0704f630 00000020 T std::bad_array_new_length::~bad_array_new_length()
0704f650 0000002c T std::bad_array_new_length::~bad_array_new_length()
0704f67c 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
0704f6d8 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0704f6ec 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
0704f6ec 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
0704f70c 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
0704f738 00000064 T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0704f79c 0000007c T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
0704f818 000000d4 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0704f8ec 00000118 t (anonymous namespace)::pool::free(void*) [clone .constprop.0]
0704fa04 000000d4 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]
0704fad8 00000044 T __cxa_allocate_exception
0704fb1c 0000002c T __cxa_free_exception
0704fb48 000001b4 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
0704fcfc T __cxa_end_cleanup
0704fd0c 00000134 T __cxa_type_match
0704fe40 000000b4 T __cxa_begin_cleanup
0704fef4 000000b4 T __gnu_end_cleanup
0704ffa8 000000cc T __cxa_begin_catch
07050074 000000e0 T __cxa_end_catch
07050154 00000004 T std::exception::~exception()
07050154 00000004 T std::exception::~exception()
07050158 00000004 T std::bad_exception::~bad_exception()
07050158 00000004 T std::bad_exception::~bad_exception()
0705015c 0000000c T transaction clone for std::exception::what() const
0705015c 0000000c T std::exception::what() const
07050168 0000000c T transaction clone for std::bad_exception::what() const
07050168 0000000c T std::bad_exception::what() const
07050174 00000018 T std::bad_exception::~bad_exception()
0705018c 0000003c t eh_globals_dtor(void*)
070501c8 00000038 T __cxa_get_globals_fast
07050200 00000074 T __cxa_get_globals
07050274 00000040 t _GLOBAL__sub_I__ZN17__eh_globals_init7_S_initE
070502b4 00000034 t _GLOBAL__sub_D__ZN17__eh_globals_init7_S_initE
070502e8 0000016c t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
07050454 00000058 t base_of_encoded_value(unsigned char, _Unwind_Context*)
070504ac 000000d8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
07050584 000006a0 T __gxx_personality_v0
07050c24 00000014 T __cxxabiv1::__terminate(void (*)())
07050c38 00000018 T std::terminate()
07050c50 0000000c T __cxxabiv1::__unexpected(void (*)())
07050c5c 00000018 T std::unexpected()
07050c74 00000014 T std::get_terminate()
07050c88 00000014 T std::get_unexpected()
07050c9c 00000060 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
07050cfc 00000054 T __cxa_init_primary_exception
07050d50 00000054 T __cxa_throw
07050da4 000000b0 T __cxa_rethrow
07050e54 00000008 T std::logic_error::what() const
07050e54 00000008 T std::runtime_error::what() const
07050e5c 00000098 T std::logic_error::~logic_error()
07050e5c 00000098 T std::logic_error::~logic_error()
07050ef4 00000098 T std::length_error::~length_error()
07050ef4 00000098 T std::length_error::~length_error()
07050f8c 00000098 T std::invalid_argument::~invalid_argument()
07050f8c 00000098 T std::invalid_argument::~invalid_argument()
07051024 00000098 T std::out_of_range::~out_of_range()
07051024 00000098 T std::out_of_range::~out_of_range()
070510bc 000000a0 T std::logic_error::~logic_error()
0705115c 000000a0 T std::length_error::~length_error()
070511fc 000000a0 T std::invalid_argument::~invalid_argument()
0705129c 000000a0 T std::out_of_range::~out_of_range()
0705133c 000000d4 T std::logic_error::logic_error(char const*)
0705133c 000000d4 T std::logic_error::logic_error(char const*)
07051410 00000020 T std::invalid_argument::invalid_argument(char const*)
07051410 00000020 T std::invalid_argument::invalid_argument(char const*)
07051430 00000020 T std::length_error::length_error(char const*)
07051430 00000020 T std::length_error::length_error(char const*)
07051450 00000020 T std::out_of_range::out_of_range(char const*)
07051450 00000020 T std::out_of_range::out_of_range(char const*)
07051470 00000084 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
070514f4 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
070514f8 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
07051568 0000002c T __cxa_call_terminate
07051594 00000150 T __cxa_call_unexpected
070516e8 0000013c T ceil
07051824 00000068 T roundf
07051890 0000027c T log2
07051b0c 000000c0 T ceilf
07051bd0 00000144 T floor
07051d14 000000c0 T floorf
07051dd4 00000024 t with_errno
07051df8 00000050 T __math_divzero
07051e48 0000001c T __math_invalid
07051e64 00000044 T __popcountsi2
07051ea8 00000030 T __aeabi_f2lz
07051ea8 00000030 T __fixsfdi
07051ed8 00000040 T __aeabi_f2ulz
07051ed8 00000040 T __fixunssfdi
07051f18 00000120 T __udivmoddi4
07052038 00000018 t selfrel_offset31
07052050 00000090 t search_EIT_table
070520e0 00000040 t __gnu_unwind_get_pr_addr
07052120 0000010c t get_eit_entry
0705222c 00000088 t restore_non_core_regs
070522b4 00000014 t _Unwind_decode_typeinfo_ptr.constprop.0
070522c8 00000004 t _Unwind_DebugHook
070522cc 00000064 t unwind_phase2
07052330 00000140 t unwind_phase2_forced
07052470 000000a4 T __gnu_Unwind_RaiseException
07052514 00000028 T __gnu_Unwind_ForcedUnwind
0705253c 00000074 T __gnu_Unwind_Resume
070525b0 00000020 T __gnu_Unwind_Resume_or_Rethrow
070525d0 00000004 T _Unwind_Complete
070525d4 00000018 T _Unwind_DeleteException
070525ec 0000006c T _Unwind_VRS_Get
07052658 0000002c t _Unwind_GetGR
07052684 0000006c T _Unwind_VRS_Set
070526f0 0000002c t _Unwind_SetGR
0705271c 000000c0 T __gnu_Unwind_Backtrace
070527dc 00000410 t __gnu_unwind_pr_common
07052bec 00000008 T __aeabi_unwind_cpp_pr0
07052bf4 00000008 W __aeabi_unwind_cpp_pr1
07052bfc 00000008 W __aeabi_unwind_cpp_pr2
07052c04 00000424 T _Unwind_VRS_Pop
07053028 00000064 t next_unwind_byte
0705308c 0000002c t _Unwind_GetGR.constprop.0
070530b8 00000004 t unwind_UCB_from_context
070530bc 00000464 T __gnu_unwind_execute
07053520 00000048 T __gnu_unwind_frame
07053568 00000010 T _Unwind_GetRegionStart
07053578 0000001c T _Unwind_GetLanguageSpecificData
07053594 00000008 T _Unwind_GetDataRelBase
0705359c 00000008 T _Unwind_GetTextRelBase
070535a4 000000e4 T strncmp
07053688 00000130 T strchr
070537b8 00000024 T getenv
070537dc 0000005c T strlen
07053838 00000150 T memmove
07053988 0000012c t iso_year_adjust
07053ab4 0000126c t __strftime.isra.0
07054d20 00000030 T strftime
07054d50 0000000c T abs
07054d5c 00000064 t sulp
07054dc0 000013a4 T _strtod_l
07056168 00000108 T strtof
07056270 00000010 T ctime
07056280 00000068 T sprintf
070562e8 000000e0 T memchr
070563c8 000000f0 t rshift
070564b8 0000089c T __gethex
07056d54 000000d8 T memcmp
07056e2c 000001d8 t _strtoul_l.isra.0
07057004 00000030 T _strtoul_r
07057034 00000034 T strtoul
07057068 00000018 T isxdigit
07057080 00000010 T _tzset_unlocked
07057090 00000020 T calloc
070570b0 000000ac T _vsnprintf_r
0705715c 00000038 T vsnprintf
07057194 0000000c T labs
070571a0 00000148 T _fclose_r
070572e8 0000000c T __gettzinfo
070572f4 000000c0 T _calloc_r
070573b4 00000020 T asctime
070573d4 0000012c T __smakebuf_r
07057500 00000020 T realloc
07057520 00000020 T memalign
07057540 0000001c t stdio_exit_handler
0705755c 0000005c t cleanup_stdio
070575b8 00000154 t global_stdio_init.part.0
0705770c 0000005c T __sinit
07057768 0000000c T __sfp_lock_acquire
07057774 0000000c T __sfp_lock_release
07057780 0000000c T __tz_lock
0705778c 0000000c T __tz_unlock
07057798 0000079c T _malloc_r
07057f34 000000f8 T _malloc_trim_r
0705802c 000002e8 T _free_r
07058314 0000064c t get_arg
07058960 00003324 T _svfprintf_r
0705bc84 00000018 T isspace
0705bc9c 00000048 T strnlen
0705bce4 00000664 T _tzset_unlocked_r
0705c348 0000000c T __errno
0705c354 00000018 T malloc
0705c36c 00000018 T free
0705c384 0000011c T memcpy
0705c4a0 000000d4 T sniprintf
0705c574 0000004c T time
0705c5c0 000000c8 T _findenv_r
0705c688 00000018 T _getenv_r
0705c6a0 000000f4 T memset
0705c794 000004a0 T _realloc_r
0705cc34 00000080 T asctime_r
0705ccb4 00000070 T _fwalk_sglue
0705cd24 0000000c T __malloc_lock
0705cd30 0000000c T __malloc_unlock
0705cd3c 00000254 T __tzcalc_limits
0705cf90 000000f0 T strcpy
0705d080 00000014 T atexit
0705d094 00000020 T localtime
0705d0b4 000000d4 T snprintf
0705d188 000000c4 T strncpy
0705d24c 0000025c t _strtoull_l.isra.0
0705d4a8 00000030 T _strtoull_r
0705d4d8 00000028 T _wcsrtombs_r
0705d500 0000064c t get_arg
0705db4c 00002218 T _svfiprintf_r
0705fd64 0000004c T __match
0705fdb0 0000029c T __hexnan
0706004c 00000084 T __libc_init_array
070600d0 0000022c T __sflush_r
070602fc 00000094 T _fflush_r
07060390 00000010 T nan
070603a0 0000000c T nanf
070603b0 00000088 T frexp
07060438 00000068 T siprintf
070604a0 0000000c T __env_lock
070604ac 0000000c T __env_unlock
070604b8 0000005c T __assert_func
07060514 00000088 T _Balloc
0706059c 0000001c T _Bfree
070605b8 000000f4 T __multadd
070606ac 00000110 T __s2b
070607bc 00000060 T __hi0bits
0706081c 0000009c T __lo0bits
070608b8 000000a4 T __i2b
0706095c 00000204 T __multiply
07060b60 00000128 T __pow5mult
07060c88 00000140 T __lshift
07060dc8 00000058 T __mcmp
07060e20 000001fc T __mdiff
0706101c 00000068 T __ulp
07061084 000000d0 T __b2d
07061154 00000124 T __d2b
07061278 00000078 T __ratio
070612f0 00000088 T __copybits
07061378 0000005c T __any_on
070613d4 00000024 T __locale_mb_cur_max
070613f8 000000a4 T __ssprint_r
0706149c 0000003c T fiprintf
070614d8 0000014c T _memalign_r
07061624 00000188 T _wcsnrtombs_l
070617ac 00000064 T _wcsnrtombs_r
07061810 000002f8 T __utf8_mbtowc
07061b08 00000078 T siscanf
07061b80 00000044 T __sread
07061bc4 00000008 T __seofread
07061bcc 00000068 T __swrite
07061c34 00000044 T __sseek
07061c78 00000008 T __sclose
07061c80 00000024 T _localeconv_r
07061ca4 000001b4 t quorem
07061e58 00001218 T _dtoa_r
07063070 000000a0 T _wcrtomb_r
07063110 000001b0 t _strtol_l.part.0
070632c0 00000060 T _strtol_r
07063320 000000b0 T __register_exitproc
070633d0 00000128 T __ssputs_r
070634f8 00000360 T localtime_r
07063858 000000f0 T __utf8_wctomb
07063948 00000268 T gmtime_r
07063bb0 0000064c t get_arg
070641fc 00002300 T _vfiprintf_r
070664fc 000000b8 t __sbprintf
070665b4 00000050 t get_arg
07066604 000000e0 T _sungetc_r
070666e4 0000006c T __ssrefill_r
07066750 000000c4 T _sfread_r
07066814 000022cc T __ssvfiscanf_r
07068ae0 00000030 T __sprint_r
07068b10 00000008 T iswspace
07068b18 000000f0 T __sccl
07068c08 000000b4 T _mbrtowc_r
07068cbc 00000138 T __swsetup_r
07068df4 000000a8 T __submore
07068e9c 00000038 T iswspace_l
07068ed4 000004b4 T __sfvwrite_r
07069388 00000234 t _strtoll_l.isra.0
070695bc 00000030 T _strtoll_r
070695ec 00000090 T category
0706967c 00000078 T _fstat_r
070696f4 0000002c T __getreent
07069720 00000030 T _gettimeofday_r
07069750 0000003c T __get_handle
0706978c 000000f4 T _close_r
07069880 00000008 t null_write
07069888 00000008 T _isatty_r
07069890 00000084 T _lseek_r
07069914 00000080 T _read_r
07069994 00000078 W _sbrk_r
07069a0c 0000001c T __libc_lock_acquire
07069a28 0000001c T __libc_lock_release
07069a44 0000001c T __libc_lock_acquire_recursive
07069a60 0000001c T __libc_lock_release_recursive
07069a7c 00000080 T _write_r
07069afc 00000038 T __aeabi_d2lz
07069afc 00000038 T __fixdfdi
07069b38 00000040 T __aeabi_d2ulz
07069b38 00000040 T __fixunsdfdi
07069b78 T _fini
07069b90 T __text_end__
0706c2b8 00000008 R CTRPluginFramework::Time::Zero
0706c2c0 00000004 R CTRPluginFramework::Color::SkyBlue
0706c2c4 00000004 R CTRPluginFramework::Color::Orange
0706c2c8 00000004 R CTRPluginFramework::Color::LimeGreen
0706c2cc 00000004 R CTRPluginFramework::Color::ForestGreen
0706c2d0 00000004 R CTRPluginFramework::Color::Gainsboro
0706c2d4 00000004 R CTRPluginFramework::Color::DodgerBlue
0706c2d8 00000004 R CTRPluginFramework::Color::DimGrey
0706c2dc 00000004 R CTRPluginFramework::Color::DeepSkyBlue
0706c2e0 00000004 R CTRPluginFramework::Color::DarkGrey
0706c2e4 00000004 R CTRPluginFramework::Color::Brown
0706c2e8 00000004 R CTRPluginFramework::Color::BlackGrey
0706c2ec 00000004 R CTRPluginFramework::Color::Green
0706c2f0 00000004 R CTRPluginFramework::Color::Gray
0706c2f4 00000004 R CTRPluginFramework::Color::Silver
0706c2f8 00000004 R CTRPluginFramework::Color::Magenta
0706c2fc 00000004 R CTRPluginFramework::Color::Cyan
0706c300 00000004 R CTRPluginFramework::Color::Yellow
0706c304 00000004 R CTRPluginFramework::Color::Blue
0706c308 00000004 R CTRPluginFramework::Color::Red
0706c30c 00000004 R CTRPluginFramework::Color::White
0706c310 00000004 R CTRPluginFramework::Color::Black
0706c940 00000014 r CTRPluginFramework::defaultSoundFiles
0706c954 00000014 V vtable for CTRPluginFramework::MenuItem
0706c968 00000014 R vtable for CTRPluginFramework::MenuFolderImpl
0706c97c 00000038 r CTRPluginFramework::stable
0706c9b4 00000038 r CTRPluginFramework::ktable
0706c9ec 00000023 r CTRPluginFramework::g_copyrightText
0706ca0f 0000001e r CTRPluginFramework::g_ctrpfText
0706ca30 00000020 R vtable for CTRPluginFramework::HexEditor::ByteView
0706ca50 00000020 R vtable for CTRPluginFramework::HexEditor::IntegerView
0706ca70 00000020 R vtable for CTRPluginFramework::HexEditor::AsmView
0706ca90 00000008 r CTRPluginFramework::HexEditor::_PromptForAddress(int)::msg
0706ca98 0000001c R vtable for CTRPluginFramework::MenuEntryImpl
0706cab4 0000001c R vtable for CTRPluginFramework::MenuEntryTools
0706cad0 00000008 r CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
0706cad8 00000008 r CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
0706cae0 00000a00 r font
0706d4e0 0000001c R vtable for CTRPluginFramework::TouchKey
0706d4fc 0000001c R vtable for CTRPluginFramework::ComboBox
0706d518 0000001c R vtable for CTRPluginFramework::Button
0706d538 00000008 r CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)::halfSecond
0706d540 00000058 r CTRPluginFramework::g_OSDPattern
0706d598 0000001c R vtable for CTRPluginFramework::TextBox
0706d5b4 0000001c R vtable for CTRPluginFramework::NumericTextBox
0706d5d0 00000040 r RegNames
0706d610 00000010 r shift_names
0706d620 00000040 r cond_names
0706d660 0000001c R vtable for CTRPluginFramework::MenuEntryActionReplay
0706d67c 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::storage
0706d684 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::data
0706d68c 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::offsets
0706d694 00000014 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::condstr
0706d6a8 0000000c r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::_data
0706d6b4 00000080 r CTRPluginFramework::KeysToString(unsigned long)::keysText
0706d734 00000018 r IsInstructionPCDependant(unsigned long)::forbiddenInstructions
0706d74c 0000001c V vtable for std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>
0706d768 00000008 V std::_Sp_make_shared_tag::_S_ti()::__tag
0706d770 00000384 r Settings15_array
0706daf4 00000384 r UnCheckedCheckbox_array
0706de78 00000384 r Unsplash15_array
0706e1fc 000009c4 r Plus25_array
0706ebc0 000009c4 r GameControllerFilled25_array
0706f584 00000384 r About15_array
0706f908 000009c4 r Cut25_array
070702cc 00000640 r CloseWindow20_array
0707090c 00000384 r Controller15_array
07070c90 00000384 r ClearSymbolFilled15_array
07071014 000009c4 r ClipboardFilled25_array
070719d8 00000384 r EnterKeyFilled15_array
07071d5c 000009c4 r CutFilled25_array
07072720 00000e10 r DefaultKeyboardCustomIcon_array
07073530 00000384 r Search15_array
070738b4 00000384 r CapsLockOn15_array
07073c38 000009c4 r TrashFilled25_array
070745fc 00000384 r RAM15_array
07074980 00000384 r More15_array
07074d04 000009c4 r InfoFilled25_array
070756c8 00000640 r CloseWindowFilled20_array
07075d08 00000384 r HandCursor15_array
0707608c 000009c4 r AddFavoriteFilled25_array
07076a50 00000384 r EnterKey15_array
07076dd4 000009c4 r Duplicate25_array
07077798 00000384 r File15_array
07077b1c 000009c4 r AddFavorite25_array
070784e0 000009c4 r Edit25_array
07078ea4 000009c4 r DuplicateFilled25_array
07079868 000009c4 r Save25_array
0707a22c 000009c4 r Clipboard25_array
0707abf0 000009c4 r Info25_array
0707b5b4 000009c4 r EditFilled25_array
0707bf78 000009c4 r KeyboardFilled25_array
0707c93c 000009c4 r PlusFilled25_array
0707d300 00000384 r ClearSymbol15_array
0707d684 00000384 r Shutdown15_array
0707da08 00000384 r Maintenance15_array
0707dd8c 00000384 r CheckedCheckbox_array
0707e110 00000384 r Grid15_array
0707e494 000009c4 r Keyboard25_array
0707ee58 00000384 r CapsLockOnFilled15_array
0707f1dc 00000384 r UserManualFilled15_array
0707f560 000009c4 r Trash25_array
0707ff24 00000384 r GameController15_array
070802a8 00000384 r Star15_array
0708062c 000009c4 r GameController25_array
07080ff0 00001900 r Rocket40_array
070828f0 00000384 r FolderFilled_array
07082c74 00000384 r Restart15_array
07082ff8 00000038 R vtable for CTRPluginFramework::Search32
07083030 00000038 R vtable for CTRPluginFramework::Search
07083068 0000001c R vtable for CTRPluginFramework::FloatingButton
07083084 00000027 V typeinfo name for __gnu_cxx::__concurrence_lock_error
070830ac 0000000c V typeinfo for __gnu_cxx::__concurrence_lock_error
070830b8 00000029 V typeinfo name for __gnu_cxx::__concurrence_unlock_error
070830e4 0000000c V typeinfo for __gnu_cxx::__concurrence_unlock_error
070830f0 0000002c V typeinfo name for __gnu_cxx::__concurrence_broadcast_error
0708311c 0000000c V typeinfo for __gnu_cxx::__concurrence_broadcast_error
07083128 00000027 V typeinfo name for __gnu_cxx::__concurrence_wait_error
07083150 0000000c V typeinfo for __gnu_cxx::__concurrence_wait_error
0708315c 00000014 V vtable for __gnu_cxx::__concurrence_lock_error
07083170 00000014 V vtable for __gnu_cxx::__concurrence_unlock_error
07083184 00000014 V vtable for __gnu_cxx::__concurrence_broadcast_error
07083198 00000014 V vtable for __gnu_cxx::__concurrence_wait_error
070831ac 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
070831d0 0000000c R typeinfo for __gnu_cxx::recursive_init_error
070831dc 00000014 R vtable for __gnu_cxx::recursive_init_error
070831f0 00000001 R std::nothrow
070831f4 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
0708321c 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
07083228 0000002c R vtable for __cxxabiv1::__si_class_type_info
07083254 0000000d R typeinfo name for std::type_info
07083264 00000008 R typeinfo for std::type_info
0708326c 0000000e r std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned int) const::__fast_bkt
0708327c 00000404 R std::__detail::__prime_list
07083680 00000018 V typeinfo name for std::_Sp_make_shared_tag
07083698 0000000d R typeinfo name for std::bad_alloc
070836a8 0000000c R typeinfo for std::bad_alloc
070836b4 00000014 R vtable for std::bad_alloc
070836c8 00000019 R typeinfo name for std::bad_array_new_length
070836e4 0000000c R typeinfo for std::bad_array_new_length
070836f0 00000014 R vtable for std::bad_array_new_length
07083704 00000022 R typeinfo name for __cxxabiv1::__class_type_info
07083728 0000000c R typeinfo for __cxxabiv1::__class_type_info
07083734 0000002c R vtable for __cxxabiv1::__class_type_info
07083760 0000000d R typeinfo name for std::exception
07083770 00000008 R typeinfo for std::exception
07083778 00000012 R typeinfo name for std::bad_exception
0708378c 0000000c R typeinfo for std::bad_exception
07083798 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
070837b8 00000008 R typeinfo for __cxxabiv1::__forced_unwind
070837c0 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
070837e4 00000008 R typeinfo for __cxxabiv1::__foreign_exception
070837ec 00000014 R vtable for std::bad_exception
07083800 00000010 R typeinfo name for std::logic_error
07083810 0000000c R typeinfo for std::logic_error
0708381c 00000015 R typeinfo name for std::invalid_argument
07083834 0000000c R typeinfo for std::invalid_argument
07083840 00000011 R typeinfo name for std::length_error
07083854 0000000c R typeinfo for std::length_error
07083860 00000011 R typeinfo name for std::out_of_range
07083874 0000000c R typeinfo for std::out_of_range
07083880 00000014 R vtable for std::logic_error
07083894 00000014 R vtable for std::invalid_argument
070838a8 00000014 R vtable for std::length_error
070838bc 00000014 R vtable for std::out_of_range
070838d0 00000890 R __log2_data
07084160 00000014 r fpinan.0
07084174 00000014 r fpi.1
07084188 00000028 r tinytens
070841b0 00000100 R __hexdig
070842b0 000000fc R _C_time_locale
070843ac 00000010 r zeroes.0
070843bc 00000010 r blanks.1
070843cc 00000101 R _ctype_
070844d0 00000024 r mon_name.0
070844f4 00000015 r day_name.1
0708450c 00000010 r zeroes.0
0708451c 00000010 r blanks.1
0708452c 0000006c R __action_table
07084598 0000006c R __state_table
07084604 00000100 R __chclass
07084704 0000000c r p05.0
07084710 00000028 R __mprec_bigtens
07084738 000000c8 R __mprec_tens
07084800 00000060 R __month_lengths
07084860 00000010 r zeroes.0
07084870 00000010 r blanks.1
07084880 00000022 r basefix.0
070848a4 000035dc r categories
07087e80 00000080 R dotab_stdnull
07087f00 R __tdata_align
07088060 R __exidx_start
07088288 R __exidx_end
07088288 00000018 d CTRPluginFramework::main()::{lambda(CTRPluginFramework::MenuEntry*)#1}::operator()(CTRPluginFramework::MenuEntry*) const::message_box
070882a0 00000004 D cwavCurrentVAPAConvCallback
070882a4 00000004 D CTRPluginFramework::FwkSettings::Header
070882a8 00000001 D CTRPluginFramework::g_keepRunning
070882a9 00000001 d CTRPluginFrameworkImpl::Services::GSP::RunInterruptReceiver
070882ac 00000018 D CTRPluginFramework::Screenshot::Prefix[abi:cxx11]
070882c4 00000018 D CTRPluginFramework::Screenshot::Path[abi:cxx11]
070882dc 00000004 D CTRPluginFramework::Screenshot::Screens
070882e0 00000004 D CTRPluginFramework::Screenshot::Hotkeys
070882e4 00000001 D CTRPluginFramework::SystemImpl::Language
070882e8 00000018 D CTRPluginFramework::FSPath::CurrentWorkingDirectory[abi:cxx11]
07088300 00000001 D CTRPluginFramework::EventManager::_refresh
07088304 00000004 d CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)::selector
07088308 00000001 d CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)::firstActivation
0708830c 00000004 D CTRPluginFramework::RendererPriv::g_customColor
07088310 000001f4 D opcode_names
07088504 00000001 D CTRPluginFramework::Preferences::_bmpCanBeLoaded
07088508 00000018 D CTRPluginFramework::Preferences::ScreenshotPrefix[abi:cxx11]
07088520 00000018 D CTRPluginFramework::Preferences::ScreenshotPath[abi:cxx11]
07088538 00000018 D CTRPluginFramework::Preferences::CheatsFile[abi:cxx11]
07088550 00000004 D CTRPluginFramework::Preferences::MenuHotkeys
07088554 00000018 d CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
0708856c 00000004 D g_charPerSheet
07088570 00000004 D Settings15
07088574 00000004 D UnCheckedCheckbox
07088578 00000004 D Unsplash15
0708857c 00000004 D Plus25
07088580 00000004 D GameControllerFilled25
07088584 00000004 D About15
07088588 00000004 D Cut25
0708858c 00000004 D CloseWindow20
07088590 00000004 D Controller15
07088594 00000004 D ClearSymbolFilled15
07088598 00000004 D ClipboardFilled25
0708859c 00000004 D EnterKeyFilled15
070885a0 00000004 D CutFilled25
070885a4 00000004 D DefaultKeyboardCustomIcon
070885a8 00000004 D Search15
070885ac 00000004 D CapsLockOn15
070885b0 00000004 D TrashFilled25
070885b4 00000004 D RAM15
070885b8 00000004 D More15
070885bc 00000004 D InfoFilled25
070885c0 00000004 D CloseWindowFilled20
070885c4 00000004 D HandCursor15
070885c8 00000004 D AddFavoriteFilled25
070885cc 00000004 D EnterKey15
070885d0 00000004 D Duplicate25
070885d4 00000004 D File15
070885d8 00000004 D AddFavorite25
070885dc 00000004 D Edit25
070885e0 00000004 D DuplicateFilled25
070885e4 00000004 D Save25
070885e8 00000004 D Clipboard25
070885ec 00000004 D Info25
070885f0 00000004 D EditFilled25
070885f4 00000004 D KeyboardFilled25
070885f8 00000004 D PlusFilled25
070885fc 00000004 D ClearSymbol15
07088600 00000004 D Shutdown15
07088604 00000004 D Maintenance15
07088608 00000004 D CheckedCheckbox
0708860c 00000004 D Grid15
07088610 00000004 D Keyboard25
07088614 00000004 D CapsLockOnFilled15
07088618 00000004 D UserManualFilled15
0708861c 00000004 D Trash25
07088620 00000004 D GameController15
07088624 00000004 D Star15
07088628 00000004 D GameController25
0708862c 00000004 D Rocket40
07088630 00000004 D FolderFilled
07088634 00000004 D Restart15
07088638 00000004 d kCount
0708863c 00000004 d kInterval
07088640 00000004 d kDelay
07088644 00000004 D __cxxabiv1::__unexpected_handler
07088648 00000004 D __cxxabiv1::__terminate_handler
0708864c 00000004 D _impure_ptr
07088650 00000120 D _impure_data
07088770 00000058 d tzinfo
070887c8 0000000c D __sglue
070887d4 00000004 D __malloc_sbrk_base
070887d8 00000004 D __malloc_trim_threshold
070887e0 00000408 D __malloc_av_
07088be8 00000008 D _tzname
07088bf0 0000016c D __global_locale
07088d5c 00000004 D environ
07088d60 00001000 d handles
07089d60 0000000c d __stderr_handle
07089d6c 0000000c d __stdout_handle
07089d78 0000000c d __stdin_handle
07089d84 0000008c D devoptab_list
07089e24 d _GLOBAL_OFFSET_TABLE_
07089e30 D __tdata_lma
07089e3c d __frame_dummy_init_array_entry
07089e3c D __init_array_start
07089e3c B __preinit_array_end
07089e3c B __preinit_array_start
07089e3c D __tdata_lma_end
07089ea4 d __do_global_dtors_aux_fini_array_entry
07089ea4 D __init_array_end
07089f00 D __bss_start__
07089f00 00000004 b guard variable for CTRPluginFramework::main()::GetNetworkPlayerData
07089f04 00000004 b CTRPluginFramework::main()::GetNetworkPlayerData
07089f08 00000004 b guard variable for CTRPluginFramework::main()::{lambda(CTRPluginFramework::MenuEntry*)#1}::operator()(CTRPluginFramework::MenuEntry*) const::message_box
07089f0c 00000004 b ncsndMutex
07089f10 00000004 b ncsndCmdCurOff
07089f14 00000004 b ncsndCmdStartOff
07089f18 00000004 B ncsndSharedMem
07089f1c 00000004 B ncsndCSNDHandle
07089f20 00000004 b ncsndRefCount
07089f24 00000004 B ncsndChannels
07089f28 00000010 B ncsndOffsets
07089f38 00000004 B ncsndSharedMemSize
07089f3c 00000004 b ncsndSharedMemBlock
07089f40 00000001 b ncsndCookieHooked
07089f44 0000000c b ncsndCookie
07089f50 b saved_stack
07089f58 00000004 b cwavListCount
07089f5c 00000004 b cwavList
07089f60 00000004 b cwavAddedToList
07089f64 b completed.1
07089f68 b object.0
07089f80 000009c4 b CTRPluginFramework::g_rng
0708a944 00000001 B CTRPluginFramework::Process::ThrowOldExceptionOnCallbackException
0708a948 00000004 B CTRPluginFramework::Process::OnPauseResume
0708a94c 00000004 B CTRPluginFramework::Process::exceptionCallback
0708a950 00000004 b CTRPluginFramework::g_runningInstance
0708a954 00000004 b CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708a958 00000004 b CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708a95c 00000002 b CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708a95e 00000001 b CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708a960 0000001c b CTRPluginFramework::g_dummy
0708a97c 00000180 b CTRPluginFramework::g_keyName
0708aafc 0000001c B CTRPluginFramework::Render::_randomSets[abi:cxx11]
0708ab18 00000004 b g_onLoadCroLock
0708ab1c 00000004 b g_onSharedMemMapHook
0708ab20 00000004 b g_onLoadCroHook
0708ab24 00000008 b CTRPluginFramework::g_mainThread
0708ab2c 00000004 B CTRPluginFramework::g_keepEvent
0708ab30 00000004 B CTRPluginFramework::g_keepThreadHandle
0708ab34 00000004 B CTRPluginFramework::g_continueGameEvent
0708ab38 00000008 B CTRPluginFramework::_sdmcArchive
0708ab40 00001000 b CTRPluginFramework::keepThreadStack
0708bb40 00000004 b g_mainThreadVars
0708bb44 00000001 b properInit
0708bb45 00000001 b fakeInit
0708bb48 00000004 b plgLdrRefCount
0708bb4c 00000004 b plgReply
0708bb50 00000004 b plgEvent
0708bb54 00000004 b plgLdrArbiter
0708bb58 00000004 b plgLdrHandle
0708bb5c 00000004 B CTRPluginFrameworkImpl::Services::GSP::InterruptReceiverThreadPriority
0708bb60 00000004 B CTRPluginFrameworkImpl::Services::GSP::BufferFlags
0708bb64 00000008 b CTRPluginFrameworkImpl::Services::GSP::SharedFrameBuffers
0708bb6c 00000008 b CTRPluginFrameworkImpl::Services::GSP::InterruptReceiverThread
0708bb74 00000004 b CTRPluginFrameworkImpl::Services::GSP::GSPRegisterInterruptReceiverHook
0708bb78 00000008 b CTRPluginFrameworkImpl::Services::GSP::Semaphore
0708bb80 00000008 b CTRPluginFrameworkImpl::Services::GSP::VBlank1Event
0708bb88 00000008 b CTRPluginFrameworkImpl::Services::GSP::VBlank0Event
0708bb90 00000004 b CTRPluginFrameworkImpl::Services::GSP::WakeEvent
0708bb94 00000004 b CTRPluginFrameworkImpl::Services::GSP::GSPEvent
0708bb98 00000004 b CTRPluginFrameworkImpl::Services::GSP::EventData
0708bb9c 00000004 b CTRPluginFrameworkImpl::Services::GSP::SharedMemoryBlock
0708bba0 00000001 b CTRPluginFrameworkImpl::Services::GSP::CatchInterrupt
0708bba4 00000004 b CTRPluginFramework::isReady
0708bba8 00000008 B CTRPluginFramework::Screenshot::_resumeEvent
0708bbb0 00000008 B CTRPluginFramework::Screenshot::_readyEvent
0708bbb8 00000008 B CTRPluginFramework::Screenshot::_task
0708bbc0 00000008 B CTRPluginFramework::Screenshot::_hotkeyTimer
0708bbc8 00000008 B CTRPluginFramework::Screenshot::_timer
0708bbd0 00000004 B CTRPluginFramework::Screenshot::_display
0708bbd4 00000004 B CTRPluginFramework::Screenshot::_filecount
0708bbd8 00000004 B CTRPluginFramework::Screenshot::_mode
0708bbdc 00000004 B CTRPluginFramework::Screenshot::ScreenshotCallback
0708bbe0 00000004 B CTRPluginFramework::Screenshot::ImgBuffer
0708bbe8 00000008 B CTRPluginFramework::Screenshot::Timer
0708bbf0 00000001 B CTRPluginFramework::Screenshot::IsEnabled
0708bbf4 00000008 b CTRPluginFramework::g_sleepEvent
0708bbfc 00000004 B CTRPluginFramework::SystemImpl::AptStatus
0708bc00 00000004 B CTRPluginFramework::SystemImpl::RosalinaHotkey
0708bc04 00000004 B CTRPluginFramework::SystemImpl::CFWVersion
0708bc08 00000001 B CTRPluginFramework::SystemImpl::IsCitra
0708bc09 00000001 B CTRPluginFramework::SystemImpl::IsNew3DS
0708bc0a 00000001 B _g_isCitra
0708bc0c 0000001c B CTRPluginFramework::HookManager::_singleton
0708bc28 000000a8 B CTRPluginFramework::Scheduler::_singleton
0708bcd0 00000004 B CTRPluginFramework::ScreenImpl::Bottom
0708bcd4 00000004 B CTRPluginFramework::ScreenImpl::Top
0708bcd8 000000ac b CTRPluginFramework::_botBuf
0708bd84 000000ac b CTRPluginFramework::_topBuf
0708be30 00000008 b CTRPluginFramework::Heap::g_heapPool
0708be38 0000000c b CTRPluginFramework::Heap::_mutex
0708be44 00000004 B CTRPluginFramework::Heap::__ctrpf_heap_size
0708be48 00000004 B CTRPluginFramework::Heap::__ctrpf_heap
0708be4c 0000000c b sAddrMap
0708be58 0000000c B CTRPluginFramework::FSPath::FSMutex
0708be64 00000044 b CTRPluginFramework::g_previousException
0708bea8 00000004 B CTRPluginFramework::ProcessImpl::processEventCallback
0708beac 00000004 B CTRPluginFramework::ProcessImpl::exceptionCount
0708beb0 00000008 B CTRPluginFramework::ProcessImpl::waitForExitEvent
0708beb8 0000000c B CTRPluginFramework::ProcessImpl::MemRegions
0708bec4 0000000c B CTRPluginFramework::ProcessImpl::MemoryMutex
0708bed0 00000010 B CTRPluginFramework::ProcessImpl::InvalidRegion
0708bee0 00000004 B CTRPluginFramework::ProcessImpl::MainThreadTls
0708bee4 00000064 B CTRPluginFramework::ProcessImpl::CodeSet
0708bf48 00000004 B CTRPluginFramework::ProcessImpl::KProcessPtr
0708bf4c 00000004 B CTRPluginFramework::ProcessImpl::MainThread
0708bf50 00000008 B CTRPluginFramework::ProcessImpl::TitleId
0708bf58 00000004 B CTRPluginFramework::ProcessImpl::ProcessId
0708bf5c 00000004 B CTRPluginFramework::ProcessImpl::Status
0708bf60 00000004 B CTRPluginFramework::ProcessImpl::IsPaused
0708bf64 00000004 B CTRPluginFramework::ProcessImpl::ProcessHandle
0708bf68 00000004 B CTRPluginFramework::EventManager::_firstTouch
0708bf6c 00000001 B CTRPluginFramework::EventManager::_isTouching
0708bf70 00000004 B CTRPluginFramework::SoundEngineImpl::fallbackSound
0708bf74 0000000c B CTRPluginFramework::SoundEngineImpl::menuSounds
0708bf80 00000004 b CTRPluginFramework::PluginMenuImpl::Run()::count
0708bf84 0000000c B CTRPluginFramework::PluginMenuImpl::_trashBinMutex
0708bf90 00000004 B CTRPluginFramework::PluginMenuImpl::_runningInstance
0708bf94 00000004 B CTRPluginFramework::MenuItem::_uidCounter
0708bf98 00000004 b CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()::bak
0708bf9c 00000004 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::last
0708bfa0 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708bfa8 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708bfb0 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
0708bfb8 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
0708bfc0 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
0708bfc4 00000008 b CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
0708bfcc 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
0708bfd0 00000008 b CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
0708bfd8 00000001 b CTRPluginFramework::g_manualScreenshotTrigger
0708bfdc 00000004 b CTRPluginFramework::g_screenshotEntry
0708bfe0 00000001 b CTRPluginFramework::InitFsTryOpenFileHook()::isInitialized
0708bfe4 00000004 b CTRPluginFramework::g_OpenFileLock
0708bfe8 00000004 B CTRPluginFramework::g_FsTryOpenFileAddress
0708bff0 00000040 b CTRPluginFramework::g_hookExportFile
0708c030 00000004 b CTRPluginFramework::g_HookMode
0708c034 00000004 b CTRPluginFramework::g_FsTryOpenFileHook
0708c038 00000008 b CTRPluginFramework::g_textXpos
0708c040 00000004 b CTRPluginFramework::g_mode
0708c044 00000004 b guard variable for CTRPluginFramework::SubMenu::Draw()::background
0708c048 00000010 b CTRPluginFramework::SubMenu::Draw()::background
0708c058 00000004 b guard variable for CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
0708c05c 00000010 b CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
0708c06c 00000001 b CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::keysAreDisabled
0708c070 00000004 B CTRPluginFramework::__g_hexEditor
0708c074 00000004 b guard variable for CTRPluginFramework::GuideReader::Draw()::background
0708c078 00000010 b CTRPluginFramework::GuideReader::Draw()::background
0708c088 00000001 b CTRPluginFramework::KeyboardImpl::_ChangeManualKey(int, bool)::preventRecursion
0708c08c 00000004 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspaceFastMode
0708c090 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
0708c098 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
0708c0a0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
0708c0a4 00000010 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
0708c0b4 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708c0b8 00000008 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708c0c0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
0708c0c4 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
0708c0d4 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
0708c0d8 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
0708c0e8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
0708c0ec 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
0708c0fc 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
0708c100 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
0708c110 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
0708c114 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
0708c124 0000000c B CTRPluginFramework::KeyboardImpl::_QwertyKeys
0708c130 0000000c B CTRPluginFramework::KeyboardImpl::_HexaDecimalKeys
0708c13c 0000000c B CTRPluginFramework::KeyboardImpl::_DecimalKeys
0708c148 00000004 b guard variable for CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
0708c14c 00000008 b CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
0708c154 00000004 b CTRPluginFramework::__pmARinstance
0708c158 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background2
0708c15c 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background2
0708c16c 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background
0708c170 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background
0708c180 00000004 b CTRPluginFramework::g_radioId
0708c184 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_firstInstance
0708c188 00000010 B CTRPluginFramework::Icon::DefaultCustomIcon
0708c198 0000001c b CTRPluginFramework::(anonymous namespace)::defaultSysFont
0708c1b4 00000004 b CTRPluginFramework::(anonymous namespace)::defaultGlyph
0708c1b8 00000004 b CTRPluginFramework::(anonymous namespace)::glyph
0708c1bc 0000000c B CTRPluginFramework::Font::_mutex
0708c1c8 00000004 B CTRPluginFramework::g_glyphAllocated
0708c1cc 00000004 B CTRPluginFramework::g_fontAllocated
0708c1d0 00000004 b guard variable for CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
0708c1d4 0000000c b CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
0708c1e0 00000028 B CTRPluginFramework::Window::TopWindow
0708c208 00000028 B CTRPluginFramework::Window::BottomWindow
0708c230 00000008 b CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask
0708c238 00000001 b CTRPluginFramework::(anonymous namespace)::HasGameResumed
0708c239 00000001 b CTRPluginFramework::(anonymous namespace)::IsForced
0708c23c 0000000c b CTRPluginFramework::(anonymous namespace)::FrameLockingMutex
0708c248 00000004 b guard variable for CTRPluginFramework::Renderer::EndFrame(bool)::background
0708c24c 00000004 b CTRPluginFramework::Renderer::EndFrame(bool)::background
0708c250 00000050 b CTRPluginFramework::g_fpsCounter
0708c2a0 00000008 B CTRPluginFramework::OSDImpl::DrawNotifTask2
0708c2a8 00000008 B CTRPluginFramework::OSDImpl::DrawNotifTask1
0708c2b0 00000008 B CTRPluginFramework::OSDImpl::OnFrameResume
0708c2b8 00000008 B CTRPluginFramework::OSDImpl::OnFramePaused
0708c2c0 00000008 B CTRPluginFramework::OSDImpl::OnNewFrameEvent
0708c2c8 00000001 B CTRPluginFramework::OSDImpl::WritesToPrevFB
0708c2c9 00000001 B CTRPluginFramework::OSDImpl::NeedToPauseFrame
0708c2ca 00000001 B CTRPluginFramework::OSDImpl::IsFramePaused
0708c2cc 00000020 B CTRPluginFramework::OSDImpl::previousFBAddr
0708c2ec 0000000c B CTRPluginFramework::OSDImpl::CallbacksTrashBin
0708c2f8 0000000c B CTRPluginFramework::OSDImpl::Callbacks
0708c304 0000000c B CTRPluginFramework::OSDImpl::Notifications
0708c310 00000024 B CTRPluginFramework::OSDImpl::FloatingBtn
0708c334 0000000c B CTRPluginFramework::OSDImpl::RecLock
0708c340 00000018 B CTRPluginFramework::OSDImpl::BottomScreen
0708c358 00000018 B CTRPluginFramework::OSDImpl::TopScreen
0708c370 00000004 B CTRPluginFramework::OSDImpl::OSDHook
0708c374 00000004 B CTRPluginFramework::OSDImpl::FramesToPlay
0708c378 00000004 B CTRPluginFramework::OSDImpl::WaitingForScreenshot
0708c37c 00000001 B CTRPluginFramework::OSDImpl::DrawSaveIcon
0708c380 0000000c B CTRPluginFramework::g_codeTypes
0708c38c 00000004 b guard variable for CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
0708c390 0000000c b CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
0708c39c 00000004 b guard variable for CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
0708c3a0 0000000c b CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
0708c3ac 00000001 b CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::isInHexEditor
0708c3ad 00000001 b CTRPluginFramework::g_newCondDataToggle
0708c3ae 00000001 b CTRPluginFramework::g_condAgainstData
0708c3b0 00000004 b CTRPluginFramework::__arCodeEditor
0708c3b4 00000001 B CTRPluginFramework::Preferences::_favoritesAlreadyLoaded
0708c3b5 00000001 B CTRPluginFramework::Preferences::_cheatsAlreadyLoaded
0708c3b8 000000a8 B CTRPluginFramework::Preferences::Settings
0708c460 00000008 B CTRPluginFramework::Preferences::Backlights
0708c468 00000008 B CTRPluginFramework::Preferences::Flags
0708c470 00000004 B CTRPluginFramework::Preferences::bottomBackgroundImage
0708c474 00000004 B CTRPluginFramework::Preferences::topBackgroundImage
0708c478 00000004 b guard variable for CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
0708c47c 00000004 B CTRPluginFramework::System::OnAbort
0708c480 00000018 b __threads
0708c498 0000000c b __mutex
0708c4a4 00000004 B CTRPluginFramework::Controller::_keysReleased
0708c4a8 00000004 B CTRPluginFramework::Controller::_keysHeld
0708c4ac 00000004 B CTRPluginFramework::Controller::_keysDown
0708c4b0 00000004 B CTRPluginFramework::_pool
0708c4b4 00000004 b guard variable for CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
0708c4b8 00000010 b CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
0708c4c8 00000001 b CTRPluginFramework::g_progressLoop
0708c4cc 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
0708c4d0 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
0708c4d8 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
0708c4e0 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
0708c4e8 00000004 b CTRPluginFramework::__converter
0708c4ec 00000004 b CTRPluginFramework::g_context
0708c4f0 00000001 b CTRPluginFramework::ToggleFloat
0708c4f1 00000001 B CTRPluginFramework::ARHandler::ExitCodeImmediately
0708c4f4 00000004 B CTRPluginFramework::ARHandler::ActiveStorage
0708c4f8 00000004 B CTRPluginFramework::ARHandler::ActiveData
0708c4fc 00000004 B CTRPluginFramework::ARHandler::ActiveOffset
0708c500 00000008 B CTRPluginFramework::ARHandler::Storage
0708c508 00000010 B CTRPluginFramework::ARHandler::Data
0708c518 00000008 B CTRPluginFramework::ARHandler::Offset
0708c520 00000fa0 b CTRPluginFramework::arStack
0708d4c0 00000004 b sharedFontAddr
0708d4c4 00000004 B g_sharedFont
0708d4c8 00000004 b srvRefCount
0708d4cc 00000004 b srvHandle
0708d4d0 00000004 b arbiter
0708d4d4 00000004 b currentAddr
0708d4d8 00000004 b maxAddr
0708d4dc 00000004 b minAddr
0708d4e0 00000004 b acRefCount
0708d4e4 00000004 b acHandle
0708d4e8 00000004 b amRefCount
0708d4ec 00000004 b amHandle
0708d4f0 00000001 b flagValue.0
0708d4f1 00000001 b flagInit.1
0708d4f4 00000004 b serviceName.6
0708d4f8 0000000c b aptFirstHook
0708d504 00000004 b aptLockHandle
0708d508 00000004 b cfguRefCount
0708d50c 00000004 b cfguHandle
0708d510 00000004 b frdRefCount
0708d514 00000004 b frdHandle
0708d518 00000080 b fsExemptArchives
0708d598 00000004 b fsuRefCount
0708d59c 00000004 b fsuHandle
0708d5a0 00000001 b gspRunEvents
0708d5a4 00000004 b gspEventThread
0708d5a8 00000004 b gspEvent
0708d5ac 00000001 b gspGpuRight
0708d5b0 00000004 b gspSharedMem
0708d5b4 00000004 b gspSharedMemHandle
0708d5b8 00000004 b gspRefCount
0708d5bc 00000004 b gspGpuHandle
0708d5c0 00000001 b usingIrrst
0708d5c4 00000004 b hidRefCount
0708d5c8 00000006 b gRate
0708d5d0 00000006 b aVec
0708d5d8 00000004 b cPos
0708d5dc 00000004 b tPos
0708d5e0 00000004 b kRepeat
0708d5e4 00000004 b kUp
0708d5e8 00000004 b kDown
0708d5ec 00000004 b kHeld
0708d5f0 00000004 b kOld
0708d5f4 00000004 B hidSharedMem
0708d5f8 00000014 B hidEvents
0708d60c 00000004 B hidMemHandle
0708d610 00000004 B hidHandle
0708d614 00000004 b irrstRefCount
0708d618 00000004 b csPos
0708d61c 00000004 b kHeld
0708d620 00000004 B irrstSharedMem
0708d624 00000004 B irrstEvent
0708d628 00000004 B irrstMemHandle
0708d62c 00000004 B irrstHandle
0708d630 00000004 b srvPmHandle
0708d634 00000004 b __sslc_refcount
0708d638 00000004 B __sslc_servhandle
0708d63c 00000004 V __ctru_heap_size
0708d640 00000004 B __ctru_linear_heap
0708d644 00000004 B __ctru_heap
0708d648 00000004 b (anonymous namespace)::get_static_cond()::once
0708d650 00000008 b (anonymous namespace)::fake_cond
0708d658 00000004 b (anonymous namespace)::static_cond
0708d65c 00000004 b (anonymous namespace)::get_static_mutex()::once
0708d660 00000010 b (anonymous namespace)::fake_mutex
0708d670 00000004 b (anonymous namespace)::static_mutex
0708d674 00000004 b (anonymous namespace)::__new_handler
0708d678 0000001c b (anonymous namespace)::emergency_pool
0708d694 00000004 b init
0708d698 00000001 B __eh_globals_init::_S_init
0708d69c 0000000c b (anonymous namespace)::eh_globals
0708d6a8 00000010 V std::string::_Rep::_S_empty_rep_storage
0708d6b8 0000000c b __sfp_recursive_mutex
0708d6c8 00000168 B __sf
0708d830 00000004 B __stdio_exit_handler
0708d834 00000004 b __tz_mutex
0708d838 00000028 B __malloc_current_mallinfo
0708d860 00000004 B __malloc_max_total_mem
0708d864 00000004 B __malloc_max_sbrked_mem
0708d868 00000004 B __malloc_top_pad
0708d86c 00000004 b prev_tzenv
0708d870 0000000c b __tzname_dst
0708d87c 0000000c b __tzname_std
0708d888 0000000c b __malloc_recursive_mutex
0708d894 00000004 B _timezone
0708d898 00000004 B _daylight
0708d89c 0000000c b __env_recursive_mutex
0708d8a8 00000004 b initial_env
0708d8ac 00000190 B __atexit0
0708da3c 00000004 B __atexit
0708da40 0000000c B __atexit_recursive_mutex
0708da4c 00000004 b __hndl_lock
0708da50 00000004 B fake_heap_start
0708da54 00000004 B fake_heap_end
0708da58 00000004 b heap_start.0
0708da5c B __tls_start
0708da88 B __bss_end__
0708da88 A __end__
0708da88 B __tls_end
